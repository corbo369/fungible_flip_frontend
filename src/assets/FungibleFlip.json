{"abi":[{"type":"constructor","inputs":[{"name":"_blast","type":"address","internalType":"address"},{"name":"_entropy","type":"address","internalType":"address"},{"name":"_provider","type":"address","internalType":"address"},{"name":"_threshold","type":"uint256","internalType":"uint256"},{"name":"_amounts","type":"uint256[6]","internalType":"uint256[6]"}],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"amounts","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimGas","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"userRandom","type":"bytes32","internalType":"bytes32"},{"name":"userCommitment","type":"bytes32","internalType":"bytes32"},{"name":"choice","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"entropyProvider","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"experience","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flip","inputs":[{"name":"sequenceNumber","type":"uint64","internalType":"uint64"},{"name":"providerRandom","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"level","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"levelOneOrHigher","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"manualReset","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requests","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"sequenceNumber","type":"uint64","internalType":"uint64"},{"name":"flipAmount","type":"uint256","internalType":"uint256"},{"name":"randomNumber","type":"bytes32","internalType":"bytes32"},{"name":"requester","type":"address","internalType":"address"},{"name":"choice","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"sequenceNumbers","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"setEntropy","inputs":[{"name":"_entropy","type":"address","internalType":"address"},{"name":"_provider","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFlipAmounts","inputs":[{"name":"_amounts","type":"uint256[6]","internalType":"uint256[6]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPointsOperator","inputs":[{"name":"_blastPoints","type":"address","internalType":"address"},{"name":"_pointsOperator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setThreshold","inputs":[{"name":"_threshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stats","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"lastTen","type":"uint32","internalType":"uint32"},{"name":"numWins","type":"uint32","internalType":"uint32"},{"name":"numLosses","type":"uint32","internalType":"uint32"},{"name":"numHeads","type":"uint32","internalType":"uint32"},{"name":"numTails","type":"uint32","internalType":"uint32"},{"name":"streak","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"threshold","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"Deposit","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"sequenceNumber","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"LevelUp","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"level","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Result","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"choice","type":"bool","indexed":false,"internalType":"bool"},{"name":"result","type":"bool","indexed":false,"internalType":"bool"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60806040523480156200001157600080fd5b5060405162001bdf38038062001bdf83398101604081905262000034916200026d565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000668162000190565b50600180546001600160a01b0319166001600160a01b03871690811790915560408051634e606c4760e01b81529051634e606c479160048082019260009290919082900301818387803b158015620000bd57600080fd5b505af1158015620000d2573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b0316637114177a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200012757600080fd5b505af11580156200013c573d6000803e3d6000fd5b5050600280546001600160a01b038089166001600160a01b031992831617909255600b80549288169290911691909117905550506009829055620001846003826006620001e0565b50505050505062000338565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b826006810192821562000211579160200282015b8281111562000211578251825591602001919060010190620001f4565b506200021f92915062000223565b5090565b5b808211156200021f576000815560010162000224565b80516001600160a01b03811681146200025257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060006101408087890312156200028857600080fd5b62000293876200023a565b95506020620002a48189016200023a565b9550620002b4604089016200023a565b94506060880151935088609f890112620002cd57600080fd5b60405160c081016001600160401b0381118282101715620002f257620002f262000257565b60405291880191808a8411156200030857600080fd5b60808a015b848110156200032657805182529083019083016200030d565b50508093505050509295509295909350565b61189780620003486000396000f3fe60806040526004361061012d5760003560e01c80638bcdcbf3116100ab578063cedc29111161006f578063cedc291114610407578063d16ef1b514610427578063d41b6db614610454578063e1fab22714610481578063e220831d146104cf578063f2fde38b146104ef57600080fd5b80638bcdcbf3146102f75780638da5cb5b146103a1578063960bfe04146103bf578063a7b10884146103df578063a95d6b1c146103f257600080fd5b806345f0a44f116100f257806345f0a44f146101e45780635382fc26146102045780635bf414ac14610224578063715018a61461024457806381d12c581461025957600080fd5b80626457771461013957806331eac793146101765780633ccfd60b1461019857806340ef7267146101a057806342cde4e8146101c057600080fd5b3661013457005b600080fd5b34801561014557600080fd5b5061015961015436600461156c565b61050f565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018257600080fd5b5061019661019136600461159a565b610539565b005b610196610809565b3480156101ac57600080fd5b506101966101bb3660046115e2565b610887565b3480156101cc57600080fd5b506101d660095481565b60405190815260200161016d565b3480156101f057600080fd5b506101d66101ff36600461156c565b6108bd565b34801561021057600080fd5b5061019661021f366004611615565b6108d4565b34801561023057600080fd5b50600b54610159906001600160a01b031681565b34801561025057600080fd5b506101966108ed565b34801561026557600080fd5b506102ba61027436600461156c565b60106020526000908152604090208054600182015460028301546003909301546001600160401b039092169290916001600160a01b03811690600160a01b900460ff1685565b604080516001600160401b0390961686526020860194909452928401919091526001600160a01b031660608301521515608082015260a00161016d565b34801561030357600080fd5b5061035f6103123660046116a0565b600e6020526000908152604090205463ffffffff808216916401000000008104821691600160401b8204811691600160601b8104821691600160801b82041690600160a01b900460ff1686565b6040805163ffffffff97881681529587166020870152938616938501939093529084166060840152909216608082015260ff90911660a082015260c00161016d565b3480156103ad57600080fd5b506000546001600160a01b0316610159565b3480156103cb57600080fd5b506101966103da36600461156c565b610901565b6101966103ed3660046116c2565b61090e565b3480156103fe57600080fd5b50610196610c45565b34801561041357600080fd5b506101966104223660046116a0565b610ce2565b34801561043357600080fd5b506101d66104423660046116a0565b600d6020526000908152604090205481565b34801561046057600080fd5b506101d661046f3660046116a0565b600c6020526000908152604090205481565b34801561048d57600080fd5b506104b761049c3660046116a0565b600f602052600090815260409020546001600160401b031681565b6040516001600160401b03909116815260200161016d565b3480156104db57600080fd5b506101966104ea3660046115e2565b610def565b3480156104fb57600080fd5b5061019661050a3660046116a0565b610e56565b600a818154811061051f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160401b0382166000908152601060205260409020600301546001600160a01b031633146105aa5760405162461bcd60e51b81526020600482015260166024820152753ab730baba3437b934bd32b2103932b8bab2b9ba32b960511b60448201526064015b60405180910390fd5b60028054600b54336000908152600f60209081526040808320546001600160401b0390811684526010909252808320909501549451639371df5160e01b81526001600160a01b039384166004820152908716602482015260448101949094526064840185905292911690639371df51906084016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190611700565b6001600160401b03841660009081526010602052604081206001810154600390910154929350916001600160a01b03811691600160a01b90910460ff16906106a960028661172f565b60408051841515808252921560208201819052918101879052909250908214906001600160a01b038516907f2afadff3ac4aa3323ea0a8a6161f11227b249516d9889715a4eae4a1993137ea9060600160405180910390a26001600160a01b0384166000908152600f60209081526040808320805467ffffffffffffffff199081169091556001600160401b038c168452601090925282208054909116815560018101829055600281019190915560030180546001600160a81b0319169055610773338483610e91565b61077e8486836112ed565b80156107ff5760006001600160a01b03851661079b876002611759565b604051600081818185875af1925050503d80600081146107d7576040519150601f19603f3d011682016040523d82523d6000602084013e6107dc565b606091505b50509050806107fd5760405162461bcd60e51b81526004016105a190611776565b505b5050505050505050565b61081161149c565b600080546040516001600160a01b039091169047908381818185875af1925050503d806000811461085e576040519150601f19603f3d011682016040523d82523d6000602084013e610863565b606091505b50509050806108845760405162461bcd60e51b81526004016105a190611776565b50565b61088f61149c565b600280546001600160a01b039384166001600160a01b031991821617909155600b8054929093169116179055565b600381600681106108cd57600080fd5b0154905081565b6108dc61149c565b6108e96003826006611519565b5050565b6108f561149c565b6108ff60006114c9565b565b61090961149c565b600955565b336000908152600f60205260409020546001600160401b03161561097f5760405162461bcd60e51b815260206004820152602260248201527f6163636f756e7473206d75737420666c69702061667465722061206465706f736044820152611a5d60f21b60648201526084016105a1565b6009544710156109d15760405162461bcd60e51b815260206004820152601c60248201527f666c697070696e672069732063757272656e746c79207061757365640000000060448201526064016105a1565b6003543414806109e2575060045434145b806109ee575060055434145b806109fa575060065434145b80610a06575060075434145b80610a12575060085434145b610a545760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a5908199b1a5c08185b5bdd5b9d606a1b60448201526064016105a1565b600254600b54604051631711922960e31b81526001600160a01b03918216600482015260009291909116906393cbf21790829063b88c914890602401602060405180830381865afa158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad1919061179f565b600b5460405160e084901b6001600160e01b03191681526001600160a01b03909116600482015260248101879052600160448201526001600160801b03919091169060640160206040518083038185885af1158015610b34573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b5991906117c8565b6040805160a0810182526001600160401b038381168083523460208085019182528486018b815233606087018181528b1515608089019081526000878152601086528a812099518a54991667ffffffffffffffff19998a16178a55955160018a015592516002890155516003909701805492511515600160a01b026001600160a81b03199093166001600160a01b039098169790971791909117909555848252600f815290859020805490931682179092559251928352929350917f0ee94a97c7c69ce2eb8cfb09bacc78d63a73b5e0fbed0d13a079190ff876ae3a910160405180910390a250505050565b610c4d61149c565b6001546001600160a01b031663662aa11d30610c716000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610cbe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190611700565b610cea61149c565b6001600160a01b0381166000818152600f60209081526040808320546001600160401b0316835260109091528082206001015490519192918381818185875af1925050503d8060008114610d5a576040519150601f19603f3d011682016040523d82523d6000602084013e610d5f565b606091505b5050905080610d805760405162461bcd60e51b81526004016105a190611776565b506001600160a01b03166000818152600f6020818152604080842080546001600160401b0316855260108352908420805467ffffffffffffffff1990811682556001820186905560028201869055600390910180546001600160a81b0319169055949093525280549091169055565b610df761149c565b6040516336b91f2b60e01b81526001600160a01b0382811660048301528316906336b91f2b90602401600060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050505050565b610e5e61149c565b6001600160a01b038116610e8857604051631e4fbdf760e01b8152600060048201526024016105a1565b610884816114c9565b306000818152600e602052604090208054600281901b620ffffc1663ffffffff1990911617905581610ec4576000610ec7565b60015b60ff16600184610ed8576000610edb565b60015b6001600160a01b038481166000908152600e6020526040808220805463ffffffff1980821663ffffffff92831660ff9890981690981b9890981716949094179490941790925587168152208054600281901b620ffffc16921691909117905581610f46576000610f49565b60015b60ff16600184610f5a576000610f5d565b60015b6001600160a01b0387166000908152600e60205260409020805463ffffffff19811663ffffffff91821660ff9490941690941b9490941793909316171790819055600160a01b9004600781901c60019081161490607f16841561105f576001600160a01b0383166000908152600e602052604090208054600160601b900463ffffffff1690600c610fed836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054600160601b90049091169150600c61103b836117e5565b91906101000a81548163ffffffff021916908363ffffffff16021790555050611100565b6001600160a01b0383166000908152600e602052604090208054600160801b900463ffffffff16906010611092836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054600160801b9004909116915060106110e0836117e5565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b83156111fa576001600160a01b0383166000908152600e602052604090208054640100000000900463ffffffff1690600461113a836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054640100000000900490911691506004611189836117e5565b91906101000a81548163ffffffff021916908363ffffffff1602179055505081156111c057806111b881611808565b9150506111c4565b5060015b6001600160a01b0386166000908152600e60205260409020805460ff60a01b1916600160a01b6080841760ff1602179055610e4e565b6001600160a01b0383166000908152600e602052604090208054600160401b900463ffffffff1690600861122d836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054600160401b90049091169150600861127b836117e5565b91906101000a81548163ffffffff021916908363ffffffff16021790555050816112b157806112a981611808565b9150506112b5565b5060015b6001600160a01b0386166000908152600e60205260409020805460ff8316600160a01b0260ff60a01b19909116179055505050505050565b8015611322576001600160a01b0383166000908152600d602052604081208054600a929061131c908490611827565b90915550505b61133366038d7ea4c680008361183a565b6001600160a01b0384166000908152600d60205260408120805490919061135b908490611827565b90915550506001600160a01b0383166000908152600d60205260409020546101f411611497576001600160a01b0383166000908152600c602052604081205490036113ec57600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0383166000908152600c60205260408120805460019290611415908490611827565b90915550506001600160a01b0383166000908152600d6020526040812080546101f4929061144490849061184e565b90915550506001600160a01b0383166000818152600c60209081526040918290205491519182527f91e51c29e7e87a74ad3b8ccba98538970f50a4309242735467f41e27c6b0fbac910160405180910390a25b505050565b6000546001600160a01b031633146108ff5760405163118cdaa760e01b81523360048201526024016105a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8260068101928215611547579160200282015b8281111561154757825182559160200191906001019061152c565b50611553929150611557565b5090565b5b808211156115535760008155600101611558565b60006020828403121561157e57600080fd5b5035919050565b6001600160401b038116811461088457600080fd5b600080604083850312156115ad57600080fd5b82356115b881611585565b946020939093013593505050565b80356001600160a01b03811681146115dd57600080fd5b919050565b600080604083850312156115f557600080fd5b6115fe836115c6565b915061160c602084016115c6565b90509250929050565b600060c0828403121561162757600080fd5b82601f83011261163657600080fd5b60405160c081018181106001600160401b038211171561166657634e487b7160e01b600052604160045260246000fd5b6040528060c084018581111561167b57600080fd5b845b8181101561169557803583526020928301920161167d565b509195945050505050565b6000602082840312156116b257600080fd5b6116bb826115c6565b9392505050565b6000806000606084860312156116d757600080fd5b8335925060208401359150604084013580151581146116f557600080fd5b809150509250925092565b60006020828403121561171257600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261173e5761173e611719565b500690565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761177057611770611743565b92915050565b6020808252600f908201526e1d1c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6000602082840312156117b157600080fd5b81516001600160801b03811681146116bb57600080fd5b6000602082840312156117da57600080fd5b81516116bb81611585565b600063ffffffff8083168181036117fe576117fe611743565b6001019392505050565b600060ff821660ff810361181e5761181e611743565b60010192915050565b8082018082111561177057611770611743565b60008261184957611849611719565b500490565b818103818111156117705761177061174356fea264697066735822122045b675fb75ed01eced0ed0ce1cd22b494866e904bac61325563295b1e70527bc64736f6c63430008140033","sourceMap":"1187:8091:27:-:0;;;2668:433;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2835:10;;1269:95:24;;1322:31;;-1:-1:-1;;;1322:31:24;;1350:1;1322:31;;;1597:51:33;1570:18;;1322:31:24;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2857:5:27::1;:22:::0;;-1:-1:-1;;;;;;2857:22:27::1;-1:-1:-1::0;;;;;2857:22:27;::::1;::::0;;::::1;::::0;;;2889:29:::1;::::0;;-1:-1:-1;;;2889:29:27;;;;:27:::1;::::0;:29:::1;::::0;;::::1;::::0;-1:-1:-1;;2889:29:27;;;;;;;;-1:-1:-1;2857:22:27;2889:29;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2928:5;;;;;;;;;-1:-1:-1::0;;;;;2928:5:27::1;-1:-1:-1::0;;;;;2928:29:27::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2969:7:27::1;:28:::0;;-1:-1:-1;;;;;2969:28:27;;::::1;-1:-1:-1::0;;;;;;2969:28:27;;::::1;;::::0;;;3007:15:::1;:27:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3044:9:27::1;:22:::0;;;3076:18:::1;:7;3086:8:::0;3076:18:::1;;:::i;:::-;;2668:433:::0;;;;;1187:8091;;2912:187:24;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:24;;;-1:-1:-1;;;;;;3020:17:24;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1187:8091:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1187:8091:27;;;-1:-1:-1;1187:8091:27;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:33;93:13;;-1:-1:-1;;;;;135:31:33;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1118;457:6;465;473;481;489;520:3;564:2;552:9;543:7;539:23;535:32;532:52;;;580:1;577;570:12;532:52;603:40;633:9;603:40;:::i;:::-;593:50;;662:2;683:49;728:2;717:9;713:18;683:49;:::i;:::-;673:59;;751:49;796:2;785:9;781:18;751:49;:::i;:::-;741:59;;840:2;829:9;825:18;819:25;809:35;;888:7;882:3;871:9;867:19;863:33;853:61;;910:1;907;900:12;853:61;943:2;937:9;985:3;973:16;;-1:-1:-1;;;;;1004:34:33;;1040:22;;;1001:62;998:88;;;1066:18;;:::i;:::-;1102:2;1095:22;1166:18;;;;1137:6;1196:19;;;1193:39;;;1228:1;1225;1218:12;1193:39;1267:3;1256:9;1252:19;1280:135;1296:6;1291:3;1288:15;1280:135;;;1362:10;;1350:23;;1393:12;;;;1313;;1280:135;;;1284:3;;1434:6;1424:16;;;;;328:1118;;;;;;;;:::o;1451:203::-;1187:8091:27;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061012d5760003560e01c80638bcdcbf3116100ab578063cedc29111161006f578063cedc291114610407578063d16ef1b514610427578063d41b6db614610454578063e1fab22714610481578063e220831d146104cf578063f2fde38b146104ef57600080fd5b80638bcdcbf3146102f75780638da5cb5b146103a1578063960bfe04146103bf578063a7b10884146103df578063a95d6b1c146103f257600080fd5b806345f0a44f116100f257806345f0a44f146101e45780635382fc26146102045780635bf414ac14610224578063715018a61461024457806381d12c581461025957600080fd5b80626457771461013957806331eac793146101765780633ccfd60b1461019857806340ef7267146101a057806342cde4e8146101c057600080fd5b3661013457005b600080fd5b34801561014557600080fd5b5061015961015436600461156c565b61050f565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018257600080fd5b5061019661019136600461159a565b610539565b005b610196610809565b3480156101ac57600080fd5b506101966101bb3660046115e2565b610887565b3480156101cc57600080fd5b506101d660095481565b60405190815260200161016d565b3480156101f057600080fd5b506101d66101ff36600461156c565b6108bd565b34801561021057600080fd5b5061019661021f366004611615565b6108d4565b34801561023057600080fd5b50600b54610159906001600160a01b031681565b34801561025057600080fd5b506101966108ed565b34801561026557600080fd5b506102ba61027436600461156c565b60106020526000908152604090208054600182015460028301546003909301546001600160401b039092169290916001600160a01b03811690600160a01b900460ff1685565b604080516001600160401b0390961686526020860194909452928401919091526001600160a01b031660608301521515608082015260a00161016d565b34801561030357600080fd5b5061035f6103123660046116a0565b600e6020526000908152604090205463ffffffff808216916401000000008104821691600160401b8204811691600160601b8104821691600160801b82041690600160a01b900460ff1686565b6040805163ffffffff97881681529587166020870152938616938501939093529084166060840152909216608082015260ff90911660a082015260c00161016d565b3480156103ad57600080fd5b506000546001600160a01b0316610159565b3480156103cb57600080fd5b506101966103da36600461156c565b610901565b6101966103ed3660046116c2565b61090e565b3480156103fe57600080fd5b50610196610c45565b34801561041357600080fd5b506101966104223660046116a0565b610ce2565b34801561043357600080fd5b506101d66104423660046116a0565b600d6020526000908152604090205481565b34801561046057600080fd5b506101d661046f3660046116a0565b600c6020526000908152604090205481565b34801561048d57600080fd5b506104b761049c3660046116a0565b600f602052600090815260409020546001600160401b031681565b6040516001600160401b03909116815260200161016d565b3480156104db57600080fd5b506101966104ea3660046115e2565b610def565b3480156104fb57600080fd5b5061019661050a3660046116a0565b610e56565b600a818154811061051f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160401b0382166000908152601060205260409020600301546001600160a01b031633146105aa5760405162461bcd60e51b81526020600482015260166024820152753ab730baba3437b934bd32b2103932b8bab2b9ba32b960511b60448201526064015b60405180910390fd5b60028054600b54336000908152600f60209081526040808320546001600160401b0390811684526010909252808320909501549451639371df5160e01b81526001600160a01b039384166004820152908716602482015260448101949094526064840185905292911690639371df51906084016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190611700565b6001600160401b03841660009081526010602052604081206001810154600390910154929350916001600160a01b03811691600160a01b90910460ff16906106a960028661172f565b60408051841515808252921560208201819052918101879052909250908214906001600160a01b038516907f2afadff3ac4aa3323ea0a8a6161f11227b249516d9889715a4eae4a1993137ea9060600160405180910390a26001600160a01b0384166000908152600f60209081526040808320805467ffffffffffffffff199081169091556001600160401b038c168452601090925282208054909116815560018101829055600281019190915560030180546001600160a81b0319169055610773338483610e91565b61077e8486836112ed565b80156107ff5760006001600160a01b03851661079b876002611759565b604051600081818185875af1925050503d80600081146107d7576040519150601f19603f3d011682016040523d82523d6000602084013e6107dc565b606091505b50509050806107fd5760405162461bcd60e51b81526004016105a190611776565b505b5050505050505050565b61081161149c565b600080546040516001600160a01b039091169047908381818185875af1925050503d806000811461085e576040519150601f19603f3d011682016040523d82523d6000602084013e610863565b606091505b50509050806108845760405162461bcd60e51b81526004016105a190611776565b50565b61088f61149c565b600280546001600160a01b039384166001600160a01b031991821617909155600b8054929093169116179055565b600381600681106108cd57600080fd5b0154905081565b6108dc61149c565b6108e96003826006611519565b5050565b6108f561149c565b6108ff60006114c9565b565b61090961149c565b600955565b336000908152600f60205260409020546001600160401b03161561097f5760405162461bcd60e51b815260206004820152602260248201527f6163636f756e7473206d75737420666c69702061667465722061206465706f736044820152611a5d60f21b60648201526084016105a1565b6009544710156109d15760405162461bcd60e51b815260206004820152601c60248201527f666c697070696e672069732063757272656e746c79207061757365640000000060448201526064016105a1565b6003543414806109e2575060045434145b806109ee575060055434145b806109fa575060065434145b80610a06575060075434145b80610a12575060085434145b610a545760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a5908199b1a5c08185b5bdd5b9d606a1b60448201526064016105a1565b600254600b54604051631711922960e31b81526001600160a01b03918216600482015260009291909116906393cbf21790829063b88c914890602401602060405180830381865afa158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad1919061179f565b600b5460405160e084901b6001600160e01b03191681526001600160a01b03909116600482015260248101879052600160448201526001600160801b03919091169060640160206040518083038185885af1158015610b34573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b5991906117c8565b6040805160a0810182526001600160401b038381168083523460208085019182528486018b815233606087018181528b1515608089019081526000878152601086528a812099518a54991667ffffffffffffffff19998a16178a55955160018a015592516002890155516003909701805492511515600160a01b026001600160a81b03199093166001600160a01b039098169790971791909117909555848252600f815290859020805490931682179092559251928352929350917f0ee94a97c7c69ce2eb8cfb09bacc78d63a73b5e0fbed0d13a079190ff876ae3a910160405180910390a250505050565b610c4d61149c565b6001546001600160a01b031663662aa11d30610c716000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610cbe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190611700565b610cea61149c565b6001600160a01b0381166000818152600f60209081526040808320546001600160401b0316835260109091528082206001015490519192918381818185875af1925050503d8060008114610d5a576040519150601f19603f3d011682016040523d82523d6000602084013e610d5f565b606091505b5050905080610d805760405162461bcd60e51b81526004016105a190611776565b506001600160a01b03166000818152600f6020818152604080842080546001600160401b0316855260108352908420805467ffffffffffffffff1990811682556001820186905560028201869055600390910180546001600160a81b0319169055949093525280549091169055565b610df761149c565b6040516336b91f2b60e01b81526001600160a01b0382811660048301528316906336b91f2b90602401600060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050505050565b610e5e61149c565b6001600160a01b038116610e8857604051631e4fbdf760e01b8152600060048201526024016105a1565b610884816114c9565b306000818152600e602052604090208054600281901b620ffffc1663ffffffff1990911617905581610ec4576000610ec7565b60015b60ff16600184610ed8576000610edb565b60015b6001600160a01b038481166000908152600e6020526040808220805463ffffffff1980821663ffffffff92831660ff9890981690981b9890981716949094179490941790925587168152208054600281901b620ffffc16921691909117905581610f46576000610f49565b60015b60ff16600184610f5a576000610f5d565b60015b6001600160a01b0387166000908152600e60205260409020805463ffffffff19811663ffffffff91821660ff9490941690941b9490941793909316171790819055600160a01b9004600781901c60019081161490607f16841561105f576001600160a01b0383166000908152600e602052604090208054600160601b900463ffffffff1690600c610fed836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054600160601b90049091169150600c61103b836117e5565b91906101000a81548163ffffffff021916908363ffffffff16021790555050611100565b6001600160a01b0383166000908152600e602052604090208054600160801b900463ffffffff16906010611092836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054600160801b9004909116915060106110e0836117e5565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b83156111fa576001600160a01b0383166000908152600e602052604090208054640100000000900463ffffffff1690600461113a836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054640100000000900490911691506004611189836117e5565b91906101000a81548163ffffffff021916908363ffffffff1602179055505081156111c057806111b881611808565b9150506111c4565b5060015b6001600160a01b0386166000908152600e60205260409020805460ff60a01b1916600160a01b6080841760ff1602179055610e4e565b6001600160a01b0383166000908152600e602052604090208054600160401b900463ffffffff1690600861122d836117e5565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0388166000908152600e602052604090208054600160401b90049091169150600861127b836117e5565b91906101000a81548163ffffffff021916908363ffffffff16021790555050816112b157806112a981611808565b9150506112b5565b5060015b6001600160a01b0386166000908152600e60205260409020805460ff8316600160a01b0260ff60a01b19909116179055505050505050565b8015611322576001600160a01b0383166000908152600d602052604081208054600a929061131c908490611827565b90915550505b61133366038d7ea4c680008361183a565b6001600160a01b0384166000908152600d60205260408120805490919061135b908490611827565b90915550506001600160a01b0383166000908152600d60205260409020546101f411611497576001600160a01b0383166000908152600c602052604081205490036113ec57600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0383166000908152600c60205260408120805460019290611415908490611827565b90915550506001600160a01b0383166000908152600d6020526040812080546101f4929061144490849061184e565b90915550506001600160a01b0383166000818152600c60209081526040918290205491519182527f91e51c29e7e87a74ad3b8ccba98538970f50a4309242735467f41e27c6b0fbac910160405180910390a25b505050565b6000546001600160a01b031633146108ff5760405163118cdaa760e01b81523360048201526024016105a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8260068101928215611547579160200282015b8281111561154757825182559160200191906001019061152c565b50611553929150611557565b5090565b5b808211156115535760008155600101611558565b60006020828403121561157e57600080fd5b5035919050565b6001600160401b038116811461088457600080fd5b600080604083850312156115ad57600080fd5b82356115b881611585565b946020939093013593505050565b80356001600160a01b03811681146115dd57600080fd5b919050565b600080604083850312156115f557600080fd5b6115fe836115c6565b915061160c602084016115c6565b90509250929050565b600060c0828403121561162757600080fd5b82601f83011261163657600080fd5b60405160c081018181106001600160401b038211171561166657634e487b7160e01b600052604160045260246000fd5b6040528060c084018581111561167b57600080fd5b845b8181101561169557803583526020928301920161167d565b509195945050505050565b6000602082840312156116b257600080fd5b6116bb826115c6565b9392505050565b6000806000606084860312156116d757600080fd5b8335925060208401359150604084013580151581146116f557600080fd5b809150509250925092565b60006020828403121561171257600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261173e5761173e611719565b500690565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761177057611770611743565b92915050565b6020808252600f908201526e1d1c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6000602082840312156117b157600080fd5b81516001600160801b03811681146116bb57600080fd5b6000602082840312156117da57600080fd5b81516116bb81611585565b600063ffffffff8083168181036117fe576117fe611743565b6001019392505050565b600060ff821660ff810361181e5761181e611743565b60010192915050565b8082018082111561177057611770611743565b60008261184957611849611719565b500490565b818103818111156117705761177061174356fea264697066735822122045b675fb75ed01eced0ed0ce1cd22b494866e904bac61325563295b1e70527bc64736f6c63430008140033","sourceMap":"1187:8091:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:33;;;;;;;;;;-1:-1:-1;1815:33:27;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:33;;;345:51;;333:2;318:18;1815:33:27;;;;;;;;6994:1088;;;;;;;;;;-1:-1:-1;6994:1088:27;;;;;:::i;:::-;;:::i;:::-;;8968:172;;;:::i;8411:156::-;;;;;;;;;;-1:-1:-1;8411:156:27;;;;;:::i;:::-;;:::i;1745:24::-;;;;;;;;;;;;;;;;;;;1448:25:33;;;1436:2;1421:18;1745:24:27;1302:177:33;1675:25:27;;;;;;;;;;-1:-1:-1;1675:25:27;;;;;:::i;:::-;;:::i;8754:104::-;;;;;;;;;;-1:-1:-1;8754:104:27;;;;;:::i;:::-;;:::i;1897:30::-;;;;;;;;;;-1:-1:-1;1897:30:27;;;;-1:-1:-1;;;;;1897:30:27;;;2293:101:24;;;;;;;;;;;;;:::i;2409:47:27:-;;;;;;;;;;-1:-1:-1;2409:47:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2409:47:27;;;;;;-1:-1:-1;;;;;2409:47:27;;;-1:-1:-1;;;2409:47:27;;;;;;;;;;-1:-1:-1;;;;;2616:31:33;;;2598:50;;2679:2;2664:18;;2657:34;;;;2707:18;;;2700:34;;;;-1:-1:-1;;;;;2770:32:33;2765:2;2750:18;;2743:60;2847:14;2840:22;2834:3;2819:19;;2812:51;2585:3;2570:19;2409:47:27;2347:522:33;2171:38:27;;;;;;;;;;-1:-1:-1;2171:38:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2171:38:27;;;;;-1:-1:-1;;;2171:38:27;;;;;-1:-1:-1;;;2171:38:27;;;;-1:-1:-1;;;2171:38:27;;;;;;;;;;3348:10:33;3385:15;;;3367:34;;3437:15;;;3432:2;3417:18;;3410:43;3489:15;;;3469:18;;;3462:43;;;;3541:15;;;3536:2;3521:18;;3514:43;3594:15;;;3588:3;3573:19;;3566:44;3659:4;3647:17;;;3641:3;3626:19;;3619:46;3325:3;3310:19;2171:38:27;3065:606:33;1638:85:24;;;;;;;;;;-1:-1:-1;1684:7:24;1710:6;-1:-1:-1;;;;;1710:6:24;1638:85;;8864:98:27;;;;;;;;;;-1:-1:-1;8864:98:27;;;;;:::i;:::-;;:::i;5628:1126::-;;;;;;:::i;:::-;;:::i;9146:95::-;;;;;;;;;;;;;:::i;8111:294::-;;;;;;;;;;-1:-1:-1;8111:294:27;;;;;:::i;:::-;;:::i;2059:45::-;;;;;;;;;;-1:-1:-1;2059:45:27;;;;;:::i;:::-;;;;;;;;;;;;;;1965:40;;;;;;;;;;-1:-1:-1;1965:40:27;;;;;:::i;:::-;;;;;;;;;;;;;;2289:49;;;;;;;;;;-1:-1:-1;2289:49:27;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2289:49:27;;;;;;-1:-1:-1;;;;;4252:31:33;;;4234:50;;4222:2;4207:18;2289:49:27;4090:200:33;8573:175:27;;;;;;;;;;-1:-1:-1;8573:175:27;;;;;:::i;:::-;;:::i;2543:215:24:-;;;;;;;;;;-1:-1:-1;2543:215:24;;;;;:::i;:::-;;:::i;1815:33:27:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1815:33:27;;-1:-1:-1;1815:33:27;:::o;6994:1088::-;-1:-1:-1;;;;;7095:24:27;;;;;;:8;:24;;;;;:34;;;-1:-1:-1;;;;;7095:34:27;7133:10;7095:48;7074:117;;;;-1:-1:-1;;;7074:117:27;;4497:2:33;7074:117:27;;;4479:21:33;4536:2;4516:18;;;4509:30;-1:-1:-1;;;4555:18:33;;;4548:52;4617:18;;7074:117:27;;;;;;;;;7225:7;;;7253:15;;7335:10;7202:20;7319:27;;;:15;:27;;;;;;;;;-1:-1:-1;;;;;7319:27:27;;;7310:37;;:8;:37;;;;;;:50;;;;7225:173;;-1:-1:-1;;;7225:173:27;;-1:-1:-1;;;;;7253:15:27;;;7225:173;;;4875:51:33;4962:31;;;4942:18;;;4935:59;5010:18;;;5003:34;;;;5053:18;;;5046:34;;;7202:20:27;7225:7;;;:14;;4847:19:33;;7225:173:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7426:24:27;;7409:14;7426:24;;;:8;:24;;;;;:35;;;;7491:34;;;;;7202:196;;-1:-1:-1;7426:35:27;-1:-1:-1;;;;;7491:34:27;;;-1:-1:-1;;;7549:31:27;;;;;;7604:25;7628:1;7202:196;7604:25;:::i;:::-;7687:41;;;7655:16;;;5719:41:33;;;7604:30:27;;5791:2:33;5776:18;;5769:50;;;5835:18;;;5828:34;;;7604:30:27;;-1:-1:-1;7655:16:27;;;;-1:-1:-1;;;;;7687:41:27;;;;;5707:2:33;5692:18;7687:41:27;;;;;;;-1:-1:-1;;;;;7746:26:27;;;;;;:15;:26;;;;;;;;7739:33;;-1:-1:-1;;7739:33:27;;;;;;-1:-1:-1;;;;;7789:24:27;;;;:8;:24;;;;;7782:31;;;;;;;7739:33;7782:31;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7782:31:27;;;7824:41;7841:10;7853:6;7861:3;7824:16;:41::i;:::-;7875:42;7894:9;7905:6;7913:3;7875:18;:42::i;:::-;7932:3;7928:148;;;7952:12;-1:-1:-1;;;;;7970:23:27;;8001:10;8005:6;8001:1;:10;:::i;:::-;7970:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7951:65;;;8038:7;8030:35;;;;-1:-1:-1;;;8030:35:27;;;;;;;:::i;:::-;7937:139;7928:148;7064:1018;;;;;;6994:1088;;:::o;8968:172::-;1531:13:24;:11;:13::i;:::-;9024:12:27::1;1710:6:24::0;;9042:46:27::1;::::0;-1:-1:-1;;;;;1710:6:24;;;;9062:21:27::1;::::0;9024:12;9042:46;9024:12;9042:46;9062:21;1710:6:24;9042:46:27::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9023:65;;;9106:7;9098:35;;;;-1:-1:-1::0;;;9098:35:27::1;;;;;;;:::i;:::-;9013:127;8968:172::o:0;8411:156::-;1531:13:24;:11;:13::i;:::-;8495:7:27::1;:28:::0;;-1:-1:-1;;;;;8495:28:27;;::::1;-1:-1:-1::0;;;;;;8495:28:27;;::::1;;::::0;;;8533:15:::1;:27:::0;;;;;::::1;::::0;::::1;;::::0;;8411:156::o;1675:25::-;;;;;;;;;;;;;;;-1:-1:-1;1675:25:27;:::o;8754:104::-;1531:13:24;:11;:13::i;:::-;8833:18:27::1;:7;8843:8:::0;8833:18:::1;;:::i;:::-;;8754:104:::0;:::o;2293:101:24:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;8864:98:27:-;1531:13:24;:11;:13::i;:::-;8933:9:27::1;:22:::0;8864:98::o;5628:1126::-;5766:10;5750:27;;;;:15;:27;;;;;;-1:-1:-1;;;;;5750:27:27;:32;5729:113;;;;-1:-1:-1;;;5729:113:27;;6934:2:33;5729:113:27;;;6916:21:33;6973:2;6953:18;;;6946:30;7012:34;6992:18;;;6985:62;-1:-1:-1;;;7063:18:33;;;7056:32;7105:19;;5729:113:27;6732:398:33;5729:113:27;5898:9;;5873:21;:34;;5852:109;;;;-1:-1:-1;;;5852:109:27;;7337:2:33;5852:109:27;;;7319:21:33;7376:2;7356:18;;;7349:30;7415;7395:18;;;7388:58;7463:18;;5852:109:27;7135:352:33;5852:109:27;6005:7;:10;5992:9;:23;;:62;;-1:-1:-1;6044:10:27;;6031:9;:23;5992:62;:101;;;-1:-1:-1;6083:10:27;;6070:9;:23;5992:101;:140;;;-1:-1:-1;6122:10:27;;6109:9;:23;5992:140;:179;;;-1:-1:-1;6161:10:27;;6148:9;:23;5992:179;:218;;;-1:-1:-1;6200:10:27;;6187:9;:23;5992:218;5971:284;;;;-1:-1:-1;;;5971:284:27;;7826:2:33;5971:284:27;;;7808:21:33;7865:2;7845:18;;;7838:30;-1:-1:-1;;;7884:18:33;;;7877:49;7943:18;;5971:284:27;7624:343:33;5971:284:27;6284:7;;6322:15;;6307:31;;-1:-1:-1;;;6307:31:27;;-1:-1:-1;;;;;6322:15:27;;;6307:31;;;345:51:33;6266:15:27;;6284:7;;;;;:15;;:7;;6307:14;;318:18:33;;6307:31:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6353:15;;6284:140;;;;;;-1:-1:-1;;;;;;6284:140:27;;;-1:-1:-1;;;;;6353:15:27;;;6284:140;;;8478:51:33;8545:18;;;8538:34;;;6353:15:27;8588:18:33;;;8581:50;-1:-1:-1;;;;;6284:140:27;;;;;8451:18:33;;6284:140:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6456:197;;;;;;;;-1:-1:-1;;;;;6456:197:27;;;;;;6532:9;6456:197;;;;;;;;;;;;;6604:10;6456:197;;;;;;;;;;;;;;;-1:-1:-1;6435:18:27;;;:8;:18;;;;;:218;;;;;;-1:-1:-1;;6435:218:27;;;;;;;;-1:-1:-1;6435:218:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6435:218:27;-1:-1:-1;;;;;;6435:218:27;;;-1:-1:-1;;;;;6435:218:27;;;;;;;;;;;;;;6664:27;;;:15;:27;;;;;;:38;;;;;;;;;;6718:29;;4234:50:33;;;6456:197:27;;-1:-1:-1;6604:10:27;6718:29;;4207:18:33;6718:29:27;;;;;;;5719:1035;5628:1126;;;:::o;9146:95::-;1531:13:24;:11;:13::i;:::-;9193:5:27::1;::::0;-1:-1:-1;;;;;9193:5:27::1;:17;9219:4;9226:7;1684::24::0;1710:6;-1:-1:-1;;;;;1710:6:24;;1638:85;9226:7:27::1;9193:41;::::0;-1:-1:-1;;;;;;9193:41:27::1;::::0;;;;;;-1:-1:-1;;;;;9126:15:33;;;9193:41:27::1;::::0;::::1;9108:34:33::0;9178:15;;9158:18;;;9151:43;9043:18;;9193:41:27::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8111:294::-:0;1531:13:24;:11;:13::i;:::-;-1:-1:-1;;;;;8192:18:27;::::1;8174:12;8228:21:::0;;;:15:::1;:21;::::0;;;;;;;;-1:-1:-1;;;;;8228:21:27::1;8219:31:::0;;:8:::1;:31:::0;;;;;;8228:21;8219:42:::1;::::0;8192:75;;8174:12;;8192:18;8174:12;8192:75;8174:12;8192:75;8219:42;8192:18;:75:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8173:94;;;8285:7;8277:35;;;;-1:-1:-1::0;;;8277:35:27::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;8338:21:27::1;8329:31;8338:21:::0;;;:15:::1;:21;::::0;;;;;;;;;-1:-1:-1;;;;;8338:21:27::1;8329:31:::0;;:8:::1;:31:::0;;;;;8322:38;;-1:-1:-1;;8322:38:27;;::::1;::::0;;8338:21;8322:38;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;8322:38:27;;;8377:21;;;;;8370:28;;;;::::1;::::0;;8111:294::o;8573:175::-;1531:13:24;:11;:13::i;:::-;8674:67:27::1;::::0;-1:-1:-1;;;8674:67:27;;-1:-1:-1;;;;;363:32:33;;;8674:67:27::1;::::0;::::1;345:51:33::0;8674:50:27;::::1;::::0;::::1;::::0;318:18:33;;8674:67:27::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8573:175:::0;;:::o;2543:215:24:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:24;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:24;;2700:1:::1;2672:31;::::0;::::1;345:51:33::0;318:18;;2672:31:24::1;199:203:33::0;2623:91:24::1;2723:28;2742:8;2723:18;:28::i;3308:1206:27:-:0;3418:4;3393:14;3459:13;;;:5;:13;;;;;:21;;3484:1;3459:26;;;3458:38;;-1:-1:-1;;3434:62:27;;;;;;3563:4;:12;;3574:1;3563:12;;;3570:1;3563:12;3531:45;;3558:1;3538:7;:15;;3552:1;3538:15;;;3548:1;3538:15;-1:-1:-1;;;;;3506:13:27;;;;;;;:5;:13;;;;;;:70;;-1:-1:-1;;3506:70:27;;;3531:28;3506:70;;;3531:23;;;;;:28;;;:45;;;;3506:70;;;;;;;;;;;;3611:12;;;;;:20;;3635:1;3611:25;;;3610:37;;3587:60;;;;;;;;3713:4;:12;;3724:1;3713:12;;;3720:1;3713:12;3681:45;;3708:1;3688:7;:15;;3702:1;3688:15;;;3698:1;3688:15;-1:-1:-1;;;;;3657:12:27;;;;;;:5;:12;;;;;:69;;-1:-1:-1;;3657:69:27;;3681:28;3657:69;;;3681:23;;;;;:28;;;:45;;;;3657:69;;;;;;;;;;-1:-1:-1;;;3754:19:27;;3777:1;3754:24;;;-1:-1:-1;3754:24:27;;;:29;;3836:4;3814:26;3851:191;;;;-1:-1:-1;;;;;3878:13:27;;;;;;:5;:13;;;;;:24;;-1:-1:-1;;;3878:24:27;;;;;:22;:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3916:12:27;;-1:-1:-1;3916:12:27;;;:5;:12;;;;;:23;;-1:-1:-1;;;3916:23:27;;;;;;-1:-1:-1;3916:21:27;:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3851:191;;;-1:-1:-1;;;;;3970:13:27;;;;;;:5;:13;;;;;:24;;-1:-1:-1;;;3970:24:27;;;;;:22;:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4008:12:27;;-1:-1:-1;4008:12:27;;;:5;:12;;;;;:23;;-1:-1:-1;;;4008:23:27;;;;;;-1:-1:-1;4008:21:27;:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3851:191;4056:4;4052:456;;;-1:-1:-1;;;;;4076:13:27;;;;;;:5;:13;;;;;:23;;;;;;;;:21;:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4113:12:27;;-1:-1:-1;4113:12:27;;;:5;:12;;;;;:22;;;;;;;;;-1:-1:-1;4113:20:27;:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4154:9;4150:64;;;4165:14;;;;:::i;:::-;;;;4150:64;;;-1:-1:-1;4213:1:27;4150:64;-1:-1:-1;;;;;4229:12:27;;;;;;:5;:12;;;;;:45;;-1:-1:-1;;;;4229:45:27;-1:-1:-1;;;4252:6:27;4251:23;;4229:45;;;;;;4052:456;;;-1:-1:-1;;;;;4305:13:27;;;;;;:5;:13;;;;;:25;;-1:-1:-1;;;4305:25:27;;;;;:23;:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4344:12:27;;-1:-1:-1;4344:12:27;;;:5;:12;;;;;:24;;-1:-1:-1;;;4344:24:27;;;;;;-1:-1:-1;4344:22:27;:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4388:9;4383:65;;4399:14;;;;:::i;:::-;;;;4383:65;;;-1:-1:-1;4447:1:27;4383:65;-1:-1:-1;;;;;4463:12:27;;;;;;:5;:12;;;;;:34;;;;;-1:-1:-1;;;4463:34:27;-1:-1:-1;;;;4463:34:27;;;;;;3383:1131;;;3308:1206;;;:::o;4810:490::-;4920:11;4916:45;;;-1:-1:-1;;;;;4933:22:27;;;;;;:10;:22;;;;;:28;;4959:2;;4933:22;:28;;4959:2;;4933:28;:::i;:::-;;;;-1:-1:-1;;4916:45:27;4997:30;5011:16;4997:11;:30;:::i;:::-;-1:-1:-1;;;;;4971:22:27;;;;;;:10;:22;;;;;:56;;:22;;;:56;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5042:22:27;;;;;;:10;:22;;;;;;5068:3;-1:-1:-1;5038:256:27;;-1:-1:-1;;;;;5090:17:27;;;;;;:5;:17;;;;;;:22;;5087:60;;5114:16;:33;;;;;;;-1:-1:-1;5114:33:27;;;;;;;;-1:-1:-1;;;;;;5114:33:27;-1:-1:-1;;;;;5114:33:27;;;;;5087:60;-1:-1:-1;;;;;5161:17:27;;;;;;:5;:17;;;;;:22;;5182:1;;5161:17;:22;;5182:1;;5161:22;:::i;:::-;;;;-1:-1:-1;;;;;;;5197:22:27;;;;;;:10;:22;;;;;:29;;5223:3;;5197:22;:29;;5223:3;;5197:29;:::i;:::-;;;;-1:-1:-1;;;;;;;5245:38:27;;5265:17;;;;:5;:17;;;;;;;;;;5245:38;;1448:25:33;;;5245:38:27;;1421:18:33;5245:38:27;;;;;;;5038:256;4810:490;;;:::o;1796:162:24:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:24;735:10:25;1855:23:24;1851:101;;1901:40;;-1:-1:-1;;;1901:40:24;;735:10:25;1901:40:24;;;345:51:33;318:18;;1901:40:24;199:203:33;2912:187:24;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:24;;;-1:-1:-1;;;;;;3020:17:24;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:33;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:33;;14:180;-1:-1:-1;14:180:33:o;407:129::-;-1:-1:-1;;;;;485:5:33;481:30;474:5;471:41;461:69;;526:1;523;516:12;541:313;608:6;616;669:2;657:9;648:7;644:23;640:32;637:52;;;685:1;682;675:12;637:52;724:9;711:23;743:30;767:5;743:30;:::i;:::-;792:5;844:2;829:18;;;;816:32;;-1:-1:-1;;;541:313:33:o;859:173::-;927:20;;-1:-1:-1;;;;;976:31:33;;966:42;;956:70;;1022:1;1019;1012:12;956:70;859:173;;;:::o;1037:260::-;1105:6;1113;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1205:29;1224:9;1205:29;:::i;:::-;1195:39;;1253:38;1287:2;1276:9;1272:18;1253:38;:::i;:::-;1243:48;;1037:260;;;;;:::o;1484:858::-;1566:6;1619:3;1607:9;1598:7;1594:23;1590:33;1587:53;;;1636:1;1633;1626:12;1587:53;1685:7;1678:4;1667:9;1663:20;1659:34;1649:62;;1707:1;1704;1697:12;1649:62;1740:2;1734:9;1782:3;1774:6;1770:16;1852:6;1840:10;1837:22;-1:-1:-1;;;;;1804:10:33;1801:34;1798:62;1795:185;;;1902:10;1897:3;1893:20;1890:1;1883:31;1937:4;1934:1;1927:15;1965:4;1962:1;1955:15;1795:185;1996:2;1989:22;2031:6;2075:3;2060:19;;2091;;;2088:39;;;2123:1;2120;2113:12;2088:39;2147:9;2165:146;2181:6;2176:3;2173:15;2165:146;;;2249:17;;2237:30;;2296:4;2287:14;;;;2198;2165:146;;;-1:-1:-1;2330:6:33;;1484:858;-1:-1:-1;;;;;1484:858:33:o;2874:186::-;2933:6;2986:2;2974:9;2965:7;2961:23;2957:32;2954:52;;;3002:1;2999;2992:12;2954:52;3025:29;3044:9;3025:29;:::i;:::-;3015:39;2874:186;-1:-1:-1;;;2874:186:33:o;3676:409::-;3750:6;3758;3766;3819:2;3807:9;3798:7;3794:23;3790:32;3787:52;;;3835:1;3832;3825:12;3787:52;3871:9;3858:23;3848:33;;3928:2;3917:9;3913:18;3900:32;3890:42;;3982:2;3971:9;3967:18;3954:32;4029:5;4022:13;4015:21;4008:5;4005:32;3995:60;;4051:1;4048;4041:12;3995:60;4074:5;4064:15;;;3676:409;;;;;:::o;5091:184::-;5161:6;5214:2;5202:9;5193:7;5189:23;5185:32;5182:52;;;5230:1;5227;5220:12;5182:52;-1:-1:-1;5253:16:33;;5091:184;-1:-1:-1;5091:184:33:o;5280:127::-;5341:10;5336:3;5332:20;5329:1;5322:31;5372:4;5369:1;5362:15;5396:4;5393:1;5386:15;5412:112;5444:1;5470;5460:35;;5475:18;;:::i;:::-;-1:-1:-1;5509:9:33;;5412:112::o;5873:127::-;5934:10;5929:3;5925:20;5922:1;5915:31;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6005:168;6078:9;;;6109;;6126:15;;;6120:22;;6106:37;6096:71;;6147:18;;:::i;:::-;6005:168;;;;:::o;6388:339::-;6590:2;6572:21;;;6629:2;6609:18;;;6602:30;-1:-1:-1;;;6663:2:33;6648:18;;6641:45;6718:2;6703:18;;6388:339::o;7972:305::-;8042:6;8095:2;8083:9;8074:7;8070:23;8066:32;8063:52;;;8111:1;8108;8101:12;8063:52;8143:9;8137:16;-1:-1:-1;;;;;8186:5:33;8182:46;8175:5;8172:57;8162:85;;8243:1;8240;8233:12;8642:249;8711:6;8764:2;8752:9;8743:7;8739:23;8735:32;8732:52;;;8780:1;8777;8770:12;8732:52;8812:9;8806:16;8831:30;8855:5;8831:30;:::i;9394:201::-;9432:3;9460:10;9505:2;9498:5;9494:14;9532:2;9523:7;9520:15;9517:41;;9538:18;;:::i;:::-;9587:1;9574:15;;9394:201;-1:-1:-1;;;9394:201:33:o;9600:175::-;9637:3;9681:4;9674:5;9670:16;9710:4;9701:7;9698:17;9695:43;;9718:18;;:::i;:::-;9767:1;9754:15;;9600:175;-1:-1:-1;;9600:175:33:o;9780:125::-;9845:9;;;9866:10;;;9863:36;;;9879:18;;:::i;9910:120::-;9950:1;9976;9966:35;;9981:18;;:::i;:::-;-1:-1:-1;10015:9:33;;9910:120::o;10035:128::-;10102:9;;;10123:11;;;10120:37;;;10137:18;;:::i","linkReferences":{}},"methodIdentifiers":{"amounts(uint256)":"45f0a44f","claimGas()":"a95d6b1c","deposit(bytes32,bytes32,bool)":"a7b10884","entropyProvider()":"5bf414ac","experience(address)":"d16ef1b5","flip(uint64,bytes32)":"31eac793","level(address)":"d41b6db6","levelOneOrHigher(uint256)":"00645777","manualReset(address)":"cedc2911","owner()":"8da5cb5b","renounceOwnership()":"715018a6","requests(uint256)":"81d12c58","sequenceNumbers(address)":"e1fab227","setEntropy(address,address)":"40ef7267","setFlipAmounts(uint256[6])":"5382fc26","setPointsOperator(address,address)":"e220831d","setThreshold(uint256)":"960bfe04","stats(address)":"8bcdcbf3","threshold()":"42cde4e8","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blast\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_entropy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256[6]\",\"name\":\"_amounts\",\"type\":\"uint256[6]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"LevelUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Result\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"userRandom\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"userCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entropyProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"experience\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"providerRandom\",\"type\":\"bytes32\"}],\"name\":\"flip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelOneOrHigher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"manualReset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"flipAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"randomNumber\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sequenceNumbers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entropy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"setEntropy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[6]\",\"name\":\"_amounts\",\"type\":\"uint256[6]\"}],\"name\":\"setFlipAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blastPoints\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pointsOperator\",\"type\":\"address\"}],\"name\":\"setPointsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stats\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"lastTen\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWins\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numLosses\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numHeads\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numTails\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"streak\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"corbo.eth\",\"details\":\"Coin flip game, built on Blast, where you double up or get rugged. Powered by Pyth Entropy, our protocol is fast and efficient, and we take no house rake or fee, providing true 50/50 odds. Website: https://fungibleflip.io Twitter: https://twitter.com/FungibleFlip\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"deposit(bytes32,bytes32,bool)\":{\"details\":\"First txn in the flip process, ('userRandom') is a random bytes32 generated by the frontend, and ('userCommitment') is the hashed version. These parameters are used to obtain the sequence number from Entropy, and request a random number to determine the outcome of the coin flip.\"},\"flip(uint64,bytes32)\":{\"details\":\"Second txn in the flip process, throws if caller is not the account linked to ('sequenceNumber'). This function completes the Entropy process, revealing the random number and settling the coin flip.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"_______  __    __  .__   __.   _______  __  .______    __       _______     _______  __       __  .______ |   ____||  |  |  | |  \\\\ |  |  /  _____||  | |   _  \\\\  |  |     |   ____|   |   ____||  |     |  | |   _  \\\\ |  |__   |  |  |  | |   \\\\|  | |  |  __  |  | |  |_)  | |  |     |  |__      |  |__   |  |     |  | |  |_)  | |   __|  |  |  |  | |  . `  | |  | |_ | |  | |   _  <  |  |     |   __|     |   __|  |  |     |  | |   ___/ |  |     |  `--'  | |  |\\\\   | |  |__| | |  | |  |_)  | |  `----.|  |____    |  |     |  `----.|  | |  | |__|      \\\\______/  |__| \\\\__|  \\\\______| |__| |______/  |_______||_______|   |__|     |_______||__| | _|\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FungibleFlip.sol\":\"FungibleFlip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/=lib/@pythnetwork/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":entropy-sdk-solidity/=lib/@pythnetwork/entropy-sdk-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"./EntropyStructs.sol\\\";\\n\\ninterface EntropyEvents {\\n    event Registered(EntropyStructs.ProviderInfo provider);\\n\\n    event Requested(EntropyStructs.Request request);\\n\\n    event Revealed(\\n        EntropyStructs.Request request,\\n        bytes32 userRevelation,\\n        bytes32 providerRevelation,\\n        bytes32 blockHash,\\n        bytes32 randomNumber\\n    );\\n}\\n\",\"keccak256\":\"0x1321bd6d273d797795c76d85b3b89049c594fbacae4e8a1df7c1c80c31654aab\",\"license\":\"Apache-2.0\"},\"lib/@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol\":{\"content\":\"// SPDX-License-Identifier: Apache 2\\n\\npragma solidity ^0.8.0;\\n\\ncontract EntropyStructs {\\n    struct ProviderInfo {\\n        uint128 feeInWei;\\n        uint128 accruedFeesInWei;\\n        // The commitment that the provider posted to the blockchain, and the sequence number\\n        // where they committed to this. This value is not advanced after the provider commits,\\n        // and instead is stored to help providers track where they are in the hash chain.\\n        bytes32 originalCommitment;\\n        uint64 originalCommitmentSequenceNumber;\\n        // Metadata for the current commitment. Providers may optionally use this field to to help\\n        // manage rotations (i.e., to pick the sequence number from the correct hash chain).\\n        bytes commitmentMetadata;\\n        // Optional URI where clients can retrieve revelations for the provider.\\n        // Client SDKs can use this field to automatically determine how to retrieve random values for each provider.\\n        // TODO: specify the API that must be implemented at this URI\\n        bytes uri;\\n        // The first sequence number that is *not* included in the current commitment (i.e., an exclusive end index).\\n        // The contract maintains the invariant that sequenceNumber <= endSequenceNumber.\\n        // If sequenceNumber == endSequenceNumber, the provider must rotate their commitment to add additional random values.\\n        uint64 endSequenceNumber;\\n        // The sequence number that will be assigned to the next inbound user request.\\n        uint64 sequenceNumber;\\n        // The current commitment represents an index/value in the provider's hash chain.\\n        // These values are used to verify requests for future sequence numbers. Note that\\n        // currentCommitmentSequenceNumber < sequenceNumber.\\n        //\\n        // The currentCommitment advances forward through the provider's hash chain as values\\n        // are revealed on-chain.\\n        bytes32 currentCommitment;\\n        uint64 currentCommitmentSequenceNumber;\\n    }\\n\\n    struct Request {\\n        // Storage slot 1 //\\n        address provider;\\n        uint64 sequenceNumber;\\n        // The number of hashes required to verify the provider revelation.\\n        uint32 numHashes;\\n        // Storage slot 2 //\\n        // The commitment is keccak256(userCommitment, providerCommitment). Storing the hash instead of both saves 20k gas by\\n        // eliminating 1 store.\\n        bytes32 commitment;\\n        // Storage slot 3 //\\n        // The number of the block where this request was created.\\n        // Note that we're using a uint64 such that we have an additional space for an address and other fields in\\n        // this storage slot. Although block.number returns a uint256, 64 bits should be plenty to index all of the\\n        // blocks ever generated.\\n        uint64 blockNumber;\\n        // The address that requested this random number.\\n        address requester;\\n        // If true, incorporate the blockhash of blockNumber into the generated random value.\\n        bool useBlockhash;\\n        // There are 3 remaining bytes of free space in this slot.\\n    }\\n}\\n\",\"keccak256\":\"0x61ef31ee296e6c4404c334ba09953db0d195bb93bbddefcc6ded3a6c700b22f3\",\"license\":\"Apache 2\"},\"lib/@pythnetwork/entropy-sdk-solidity/IEntropy.sol\":{\"content\":\"// SPDX-License-Identifier: Apache 2\\npragma solidity ^0.8.0;\\n\\nimport \\\"./EntropyEvents.sol\\\";\\n\\ninterface IEntropy is EntropyEvents {\\n    // Register msg.sender as a randomness provider. The arguments are the provider's configuration parameters\\n    // and initial commitment. Re-registering the same provider rotates the provider's commitment (and updates\\n    // the feeInWei).\\n    //\\n    // chainLength is the number of values in the hash chain *including* the commitment, that is, chainLength >= 1.\\n    function register(\\n        uint128 feeInWei,\\n        bytes32 commitment,\\n        bytes calldata commitmentMetadata,\\n        uint64 chainLength,\\n        bytes calldata uri\\n    ) external;\\n\\n    // Withdraw a portion of the accumulated fees for the provider msg.sender.\\n    // Calling this function will transfer `amount` wei to the caller (provided that they have accrued a sufficient\\n    // balance of fees in the contract).\\n    function withdraw(uint128 amount) external;\\n\\n    // As a user, request a random number from `provider`. Prior to calling this method, the user should\\n    // generate a random number x and keep it secret. The user should then compute hash(x) and pass that\\n    // as the userCommitment argument. (You may call the constructUserCommitment method to compute the hash.)\\n    //\\n    // This method returns a sequence number. The user should pass this sequence number to\\n    // their chosen provider (the exact method for doing so will depend on the provider) to retrieve the provider's\\n    // number. The user should then call fulfillRequest to construct the final random number.\\n    //\\n    // This method will revert unless the caller provides a sufficient fee (at least getFee(provider)) as msg.value.\\n    // Note that excess value is *not* refunded to the caller.\\n    function request(\\n        address provider,\\n        bytes32 userCommitment,\\n        bool useBlockHash\\n    ) external payable returns (uint64 assignedSequenceNumber);\\n\\n    // Fulfill a request for a random number. This method validates the provided userRandomness and provider's proof\\n    // against the corresponding commitments in the in-flight request. If both values are validated, this function returns\\n    // the corresponding random number.\\n    //\\n    // Note that this function can only be called once per in-flight request. Calling this function deletes the stored\\n    // request information (so that the contract doesn't use a linear amount of storage in the number of requests).\\n    // If you need to use the returned random number more than once, you are responsible for storing it.\\n    function reveal(\\n        address provider,\\n        uint64 sequenceNumber,\\n        bytes32 userRandomness,\\n        bytes32 providerRevelation\\n    ) external returns (bytes32 randomNumber);\\n\\n    function getProviderInfo(\\n        address provider\\n    ) external view returns (EntropyStructs.ProviderInfo memory info);\\n\\n    function getDefaultProvider() external view returns (address provider);\\n\\n    function getRequest(\\n        address provider,\\n        uint64 sequenceNumber\\n    ) external view returns (EntropyStructs.Request memory req);\\n\\n    function getFee(address provider) external view returns (uint128 feeAmount);\\n\\n    function getAccruedPythFees()\\n        external\\n        view\\n        returns (uint128 accruedPythFeesInWei);\\n\\n    function constructUserCommitment(\\n        bytes32 userRandomness\\n    ) external pure returns (bytes32 userCommitment);\\n\\n    function combineRandomValues(\\n        bytes32 userRandomness,\\n        bytes32 providerRandomness,\\n        bytes32 blockHash\\n    ) external pure returns (bytes32 combinedRandomness);\\n}\\n\",\"keccak256\":\"0xa2d8221d2157115b9b8933837aaebb735b6276500673c5d8e9bdbed3052c672a\",\"license\":\"Apache 2\"},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"src/FungibleFlip.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./IBlast.sol\\\";\\nimport \\\"./IBlastPoints.sol\\\";\\nimport \\\"entropy-sdk-solidity/IEntropy.sol\\\";\\nimport \\\"openzeppelin-contracts/access/Ownable.sol\\\";\\n\\n/**\\n *  _______  __    __  .__   __.   _______  __  .______    __       _______     _______  __       __  .______\\n * |   ____||  |  |  | |  \\\\ |  |  /  _____||  | |   _  \\\\  |  |     |   ____|   |   ____||  |     |  | |   _  \\\\\\n * |  |__   |  |  |  | |   \\\\|  | |  |  __  |  | |  |_)  | |  |     |  |__      |  |__   |  |     |  | |  |_)  |\\n * |   __|  |  |  |  | |  . `  | |  | |_ | |  | |   _  <  |  |     |   __|     |   __|  |  |     |  | |   ___/\\n * |  |     |  `--'  | |  |\\\\   | |  |__| | |  | |  |_)  | |  `----.|  |____    |  |     |  `----.|  | |  |\\n * |__|      \\\\______/  |__| \\\\__|  \\\\______| |__| |______/  |_______||_______|   |__|     |_______||__| | _|\\n *\\n *\\n * @dev Coin flip game, built on Blast, where you double up or get rugged. Powered by Pyth Entropy,\\n * our protocol is fast and efficient, and we take no house rake or fee, providing true 50/50 odds.\\n *\\n * Website: https://fungibleflip.io\\n * Twitter: https://twitter.com/FungibleFlip\\n *\\n * @author corbo.eth\\n */\\ncontract FungibleFlip is Ownable {\\n\\n    IBlast private blast;\\n\\n    IEntropy private entropy;\\n\\n    struct Stats {\\n        uint32 lastTen;\\n        uint32 numWins;\\n        uint32 numLosses;\\n        uint32 numHeads;\\n        uint32 numTails;\\n        uint8 streak;\\n    }\\n\\n    struct FlipRequest {\\n        uint64 sequenceNumber;\\n        uint256 flipAmount;\\n        bytes32 randomNumber;\\n        address requester;\\n        bool choice;\\n    }\\n\\n    // @dev Ether values of allowed wager sizes.\\n    uint256[6] public amounts;\\n\\n    // @dev Minimum contract balance.\\n    uint256 public threshold;\\n\\n    // @dev Used to build leaderboard.\\n    address[] public levelOneOrHigher;\\n\\n    // @dev Pyth Entropy provider address\\n    address public entropyProvider;\\n\\n    // @dev (Account -> level)\\n    mapping(address => uint256) public level;\\n\\n    // @dev (Account -> exp) (500 exp / level)\\n    mapping(address => uint256) public experience;\\n\\n    // @dev Stores global and individual account statistics\\n    mapping(address => Stats) public stats;\\n\\n    // @dev (Account -> sequence number) (used to fetch the vrf request)\\n    mapping(address => uint64) public sequenceNumbers;\\n\\n    // @dev (Sequence number -> deposit data used for flip txn)\\n    mapping(uint256 => FlipRequest) public requests;\\n\\n    event LevelUp(address indexed user, uint256 level);\\n\\n    event Deposit(address indexed user, uint64 sequenceNumber);\\n\\n    event Result(address indexed user, bool choice, bool result, uint256 amount);\\n\\n    constructor(\\n        address _blast,\\n        address _entropy,\\n        address _provider,\\n        uint256 _threshold,\\n        uint256[6] memory _amounts\\n    ) Ownable(msg.sender) {\\n        blast = IBlast(_blast);\\n        blast.configureClaimableGas();\\n        blast.configureAutomaticYield();\\n        entropy = IEntropy(_entropy);\\n        entropyProvider = _provider;\\n        threshold = _threshold;\\n        amounts = _amounts;\\n    }\\n\\n    /**\\n     * @dev Records and stores user and global statistics after a successful flip. Heads/tails\\n     * choice count, win/loss count, last ten flips, and current streak are all recorded.\\n     */\\n    function recordStatistics(address _user, bool _choice, bool _win) internal {\\n        address global = address(this);\\n\\n        stats[global].lastTen = (stats[global].lastTen << 2) & 0xFFFFF;\\n        stats[global].lastTen |= uint32(_choice ? 1 : 0) << 1 | (_win ? 1 : 0);\\n\\n        stats[_user].lastTen = (stats[_user].lastTen << 2) & 0xFFFFF;\\n        stats[_user].lastTen |= uint32(_choice ? 1 : 0) << 1 | (_win ? 1 : 0);\\n\\n        bool winStreak = stats[_user].streak >> 7 == 1;\\n        uint8 streakLength = stats[_user].streak & 0x7F;\\n\\n        if (_choice) {\\n            stats[global].numHeads++;\\n            stats[_user].numHeads++;\\n        } else {\\n            stats[global].numTails++;\\n            stats[_user].numTails++;\\n        }\\n\\n        if (_win) {\\n            stats[global].numWins++;\\n            stats[_user].numWins++;\\n\\n            if (winStreak) streakLength++;\\n            else streakLength = 1;\\n\\n            stats[_user].streak = (1 << 7) | streakLength;\\n        } else {\\n            stats[global].numLosses++;\\n            stats[_user].numLosses++;\\n\\n            if (!winStreak) streakLength++;\\n            else streakLength = 1;\\n\\n            stats[_user].streak = streakLength;\\n        }\\n    }\\n\\n    /**\\n     * @dev Increases an accounts experience after a flip is completed, if their experience reaches\\n     * 500, their level is incremented and their experience is reset to 0. When an account reaches\\n     * level 1, their address is pushed to the array ('levelOneOrHigher').\\n     */\\n    function increaseExperience(address _requester, uint256 _flipAmount, bool _flipResult) internal {\\n        if (_flipResult) experience[_requester] += 10;\\n        experience[_requester] += _flipAmount / 1000000000000000;\\n\\n        if (experience[_requester] >= 500) {\\n            if(level[_requester] == 0) levelOneOrHigher.push(_requester);\\n            level[_requester] += 1;\\n            experience[_requester] -= 500;\\n            emit LevelUp(_requester, level[_requester]);\\n        }\\n    }\\n\\n    /**\\n     * @dev First txn in the flip process, ('userRandom') is a random bytes32 generated by the frontend,\\n     * and ('userCommitment') is the hashed version. These parameters are used to obtain the sequence number\\n     * from Entropy, and request a random number to determine the outcome of the coin flip.\\n     */\\n    function deposit(bytes32 userRandom, bytes32 userCommitment, bool choice) external payable {\\n        require(\\n            sequenceNumbers[msg.sender] == 0,\\n            \\\"accounts must flip after a deposit\\\"\\n        );\\n        require(\\n            address(this).balance >= threshold,\\n            \\\"flipping is currently paused\\\"\\n        );\\n        require(\\n            msg.value == amounts[0] ||\\n            msg.value == amounts[1] ||\\n            msg.value == amounts[2] ||\\n            msg.value == amounts[3] ||\\n            msg.value == amounts[4] ||\\n            msg.value == amounts[5],\\n            \\\"invalid flip amount\\\"\\n        );\\n\\n        uint64 sequence = entropy.request{value: entropy.getFee(entropyProvider)}(\\n            entropyProvider,\\n            userCommitment,\\n            true\\n        );\\n\\n        requests[sequence] = FlipRequest({\\n            sequenceNumber: sequence,\\n            flipAmount: msg.value,\\n            randomNumber: userRandom,\\n            requester: msg.sender,\\n            choice: choice\\n        });\\n\\n        sequenceNumbers[msg.sender] = sequence;\\n\\n        emit Deposit(msg.sender, sequence);\\n    }\\n\\n    /**\\n     * @dev Second txn in the flip process, throws if caller is not the account linked to ('sequenceNumber').\\n     * This function completes the Entropy process, revealing the random number and settling the coin flip.\\n     */\\n    function flip(uint64 sequenceNumber, bytes32 providerRandom) external {\\n        require(\\n            requests[sequenceNumber].requester == msg.sender,\\n            \\\"unauthorized requester\\\"\\n        );\\n\\n        bytes32 randomNumber = entropy.reveal(\\n            entropyProvider,\\n            sequenceNumber,\\n            requests[sequenceNumbers[msg.sender]].randomNumber,\\n            providerRandom\\n        );\\n\\n        uint256 amount = requests[sequenceNumber].flipAmount;\\n        address requester = requests[sequenceNumber].requester;\\n        bool choice = requests[sequenceNumber].choice;\\n        bool result = uint256(randomNumber) % 2 == 0;\\n        bool win = choice == result;\\n\\n        emit Result(requester, choice, result, amount);\\n\\n        delete sequenceNumbers[requester];\\n        delete requests[sequenceNumber];\\n\\n        recordStatistics(msg.sender, choice, win);\\n        increaseExperience(requester, amount, win);\\n\\n        if (win) {\\n            (bool success, ) = payable(requester).call{value: 2 * amount}(\\\"\\\");\\n            require(success, \\\"transfer failed\\\");\\n        }\\n    }\\n\\n    // Owner functions\\n    function manualReset(address user) public onlyOwner {\\n        (bool success, ) = payable(user).call{value: (requests[sequenceNumbers[user]].flipAmount)}(\\\"\\\");\\n        require(success, \\\"transfer failed\\\");\\n        delete requests[sequenceNumbers[user]];\\n        delete sequenceNumbers[user];\\n    }\\n\\n    function setEntropy(address _entropy, address _provider) public onlyOwner {\\n        entropy = IEntropy(_entropy);\\n        entropyProvider = _provider;\\n    }\\n\\n    function setPointsOperator(address _blastPoints, address _pointsOperator) public onlyOwner {\\n        IBlastPoints(_blastPoints).configurePointsOperator(_pointsOperator);\\n    }\\n\\n    function setFlipAmounts(uint256[6] memory _amounts) public onlyOwner {\\n        amounts = _amounts;\\n    }\\n\\n    function setThreshold(uint256 _threshold) public onlyOwner {\\n        threshold = _threshold;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        (bool success, ) = owner().call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"transfer failed\\\");\\n    }\\n\\n    function claimGas() public onlyOwner {\\n        blast.claimMaxGas(address(this), owner());\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xd02386c838f8d193eb725589387a60ce1b658ba0234e92fc3f0ca9f7f5a9b1a3\",\"license\":\"MIT\"},\"src/IBlast.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IBlast {\\n    function configureAutomaticYield() external;\\n    function configureClaimableGas() external;\\n    function claimMaxGas(address contractAddress, address recipientOfGas) external returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x913c6c691be83ac1014045531d7ab4c46c525960a2cf2260a43a39256cf4cbf8\",\"license\":\"MIT\"},\"src/IBlastPoints.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IBlastPoints {\\n    function configurePointsOperator(address operator) external;\\n}\\n\",\"keccak256\":\"0x7f52337da337eb0d8a622a646033a4d65f15cdec651cca8b34155aeb4758cee3\",\"license\":\"MIT\"}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_blast","type":"address"},{"internalType":"address","name":"_entropy","type":"address"},{"internalType":"address","name":"_provider","type":"address"},{"internalType":"uint256","name":"_threshold","type":"uint256"},{"internalType":"uint256[6]","name":"_amounts","type":"uint256[6]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint64","name":"sequenceNumber","type":"uint64","indexed":false}],"type":"event","name":"Deposit","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"level","type":"uint256","indexed":false}],"type":"event","name":"LevelUp","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bool","name":"choice","type":"bool","indexed":false},{"internalType":"bool","name":"result","type":"bool","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Result","anonymous":false},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"amounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"claimGas"},{"inputs":[{"internalType":"bytes32","name":"userRandom","type":"bytes32"},{"internalType":"bytes32","name":"userCommitment","type":"bytes32"},{"internalType":"bool","name":"choice","type":"bool"}],"stateMutability":"payable","type":"function","name":"deposit"},{"inputs":[],"stateMutability":"view","type":"function","name":"entropyProvider","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"experience","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint64","name":"sequenceNumber","type":"uint64"},{"internalType":"bytes32","name":"providerRandom","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"flip"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"level","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"levelOneOrHigher","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"manualReset"},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"requests","outputs":[{"internalType":"uint64","name":"sequenceNumber","type":"uint64"},{"internalType":"uint256","name":"flipAmount","type":"uint256"},{"internalType":"bytes32","name":"randomNumber","type":"bytes32"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"bool","name":"choice","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"sequenceNumbers","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"_entropy","type":"address"},{"internalType":"address","name":"_provider","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setEntropy"},{"inputs":[{"internalType":"uint256[6]","name":"_amounts","type":"uint256[6]"}],"stateMutability":"nonpayable","type":"function","name":"setFlipAmounts"},{"inputs":[{"internalType":"address","name":"_blastPoints","type":"address"},{"internalType":"address","name":"_pointsOperator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPointsOperator"},{"inputs":[{"internalType":"uint256","name":"_threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setThreshold"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"stats","outputs":[{"internalType":"uint32","name":"lastTen","type":"uint32"},{"internalType":"uint32","name":"numWins","type":"uint32"},{"internalType":"uint32","name":"numLosses","type":"uint32"},{"internalType":"uint32","name":"numHeads","type":"uint32"},{"internalType":"uint32","name":"numTails","type":"uint32"},{"internalType":"uint8","name":"streak","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"threshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"payable","type":"function","name":"withdraw"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"deposit(bytes32,bytes32,bool)":{"details":"First txn in the flip process, ('userRandom') is a random bytes32 generated by the frontend, and ('userCommitment') is the hashed version. These parameters are used to obtain the sequence number from Entropy, and request a random number to determine the outcome of the coin flip."},"flip(uint64,bytes32)":{"details":"Second txn in the flip process, throws if caller is not the account linked to ('sequenceNumber'). This function completes the Entropy process, revealing the random number and settling the coin flip."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pythnetwork/=lib/@pythnetwork/","ds-test/=lib/forge-std/lib/ds-test/src/","entropy-sdk-solidity/=lib/@pythnetwork/entropy-sdk-solidity/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"useLiteralContent":true,"bytecodeHash":"ipfs"},"compilationTarget":{"src/FungibleFlip.sol":"FungibleFlip"},"evmVersion":"paris","libraries":{}},"sources":{"lib/@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol":{"keccak256":"0x1321bd6d273d797795c76d85b3b89049c594fbacae4e8a1df7c1c80c31654aab","urls":[],"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./EntropyStructs.sol\";\n\ninterface EntropyEvents {\n    event Registered(EntropyStructs.ProviderInfo provider);\n\n    event Requested(EntropyStructs.Request request);\n\n    event Revealed(\n        EntropyStructs.Request request,\n        bytes32 userRevelation,\n        bytes32 providerRevelation,\n        bytes32 blockHash,\n        bytes32 randomNumber\n    );\n}\n","license":"Apache-2.0"},"lib/@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol":{"keccak256":"0x61ef31ee296e6c4404c334ba09953db0d195bb93bbddefcc6ded3a6c700b22f3","urls":[],"content":"// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ncontract EntropyStructs {\n    struct ProviderInfo {\n        uint128 feeInWei;\n        uint128 accruedFeesInWei;\n        // The commitment that the provider posted to the blockchain, and the sequence number\n        // where they committed to this. This value is not advanced after the provider commits,\n        // and instead is stored to help providers track where they are in the hash chain.\n        bytes32 originalCommitment;\n        uint64 originalCommitmentSequenceNumber;\n        // Metadata for the current commitment. Providers may optionally use this field to to help\n        // manage rotations (i.e., to pick the sequence number from the correct hash chain).\n        bytes commitmentMetadata;\n        // Optional URI where clients can retrieve revelations for the provider.\n        // Client SDKs can use this field to automatically determine how to retrieve random values for each provider.\n        // TODO: specify the API that must be implemented at this URI\n        bytes uri;\n        // The first sequence number that is *not* included in the current commitment (i.e., an exclusive end index).\n        // The contract maintains the invariant that sequenceNumber <= endSequenceNumber.\n        // If sequenceNumber == endSequenceNumber, the provider must rotate their commitment to add additional random values.\n        uint64 endSequenceNumber;\n        // The sequence number that will be assigned to the next inbound user request.\n        uint64 sequenceNumber;\n        // The current commitment represents an index/value in the provider's hash chain.\n        // These values are used to verify requests for future sequence numbers. Note that\n        // currentCommitmentSequenceNumber < sequenceNumber.\n        //\n        // The currentCommitment advances forward through the provider's hash chain as values\n        // are revealed on-chain.\n        bytes32 currentCommitment;\n        uint64 currentCommitmentSequenceNumber;\n    }\n\n    struct Request {\n        // Storage slot 1 //\n        address provider;\n        uint64 sequenceNumber;\n        // The number of hashes required to verify the provider revelation.\n        uint32 numHashes;\n        // Storage slot 2 //\n        // The commitment is keccak256(userCommitment, providerCommitment). Storing the hash instead of both saves 20k gas by\n        // eliminating 1 store.\n        bytes32 commitment;\n        // Storage slot 3 //\n        // The number of the block where this request was created.\n        // Note that we're using a uint64 such that we have an additional space for an address and other fields in\n        // this storage slot. Although block.number returns a uint256, 64 bits should be plenty to index all of the\n        // blocks ever generated.\n        uint64 blockNumber;\n        // The address that requested this random number.\n        address requester;\n        // If true, incorporate the blockhash of blockNumber into the generated random value.\n        bool useBlockhash;\n        // There are 3 remaining bytes of free space in this slot.\n    }\n}\n","license":"Apache 2"},"lib/@pythnetwork/entropy-sdk-solidity/IEntropy.sol":{"keccak256":"0xa2d8221d2157115b9b8933837aaebb735b6276500673c5d8e9bdbed3052c672a","urls":[],"content":"// SPDX-License-Identifier: Apache 2\npragma solidity ^0.8.0;\n\nimport \"./EntropyEvents.sol\";\n\ninterface IEntropy is EntropyEvents {\n    // Register msg.sender as a randomness provider. The arguments are the provider's configuration parameters\n    // and initial commitment. Re-registering the same provider rotates the provider's commitment (and updates\n    // the feeInWei).\n    //\n    // chainLength is the number of values in the hash chain *including* the commitment, that is, chainLength >= 1.\n    function register(\n        uint128 feeInWei,\n        bytes32 commitment,\n        bytes calldata commitmentMetadata,\n        uint64 chainLength,\n        bytes calldata uri\n    ) external;\n\n    // Withdraw a portion of the accumulated fees for the provider msg.sender.\n    // Calling this function will transfer `amount` wei to the caller (provided that they have accrued a sufficient\n    // balance of fees in the contract).\n    function withdraw(uint128 amount) external;\n\n    // As a user, request a random number from `provider`. Prior to calling this method, the user should\n    // generate a random number x and keep it secret. The user should then compute hash(x) and pass that\n    // as the userCommitment argument. (You may call the constructUserCommitment method to compute the hash.)\n    //\n    // This method returns a sequence number. The user should pass this sequence number to\n    // their chosen provider (the exact method for doing so will depend on the provider) to retrieve the provider's\n    // number. The user should then call fulfillRequest to construct the final random number.\n    //\n    // This method will revert unless the caller provides a sufficient fee (at least getFee(provider)) as msg.value.\n    // Note that excess value is *not* refunded to the caller.\n    function request(\n        address provider,\n        bytes32 userCommitment,\n        bool useBlockHash\n    ) external payable returns (uint64 assignedSequenceNumber);\n\n    // Fulfill a request for a random number. This method validates the provided userRandomness and provider's proof\n    // against the corresponding commitments in the in-flight request. If both values are validated, this function returns\n    // the corresponding random number.\n    //\n    // Note that this function can only be called once per in-flight request. Calling this function deletes the stored\n    // request information (so that the contract doesn't use a linear amount of storage in the number of requests).\n    // If you need to use the returned random number more than once, you are responsible for storing it.\n    function reveal(\n        address provider,\n        uint64 sequenceNumber,\n        bytes32 userRandomness,\n        bytes32 providerRevelation\n    ) external returns (bytes32 randomNumber);\n\n    function getProviderInfo(\n        address provider\n    ) external view returns (EntropyStructs.ProviderInfo memory info);\n\n    function getDefaultProvider() external view returns (address provider);\n\n    function getRequest(\n        address provider,\n        uint64 sequenceNumber\n    ) external view returns (EntropyStructs.Request memory req);\n\n    function getFee(address provider) external view returns (uint128 feeAmount);\n\n    function getAccruedPythFees()\n        external\n        view\n        returns (uint128 accruedPythFeesInWei);\n\n    function constructUserCommitment(\n        bytes32 userRandomness\n    ) external pure returns (bytes32 userCommitment);\n\n    function combineRandomValues(\n        bytes32 userRandomness,\n        bytes32 providerRandomness,\n        bytes32 blockHash\n    ) external pure returns (bytes32 combinedRandomness);\n}\n","license":"Apache 2"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":[],"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n","license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3","urls":[],"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n","license":"MIT"},"src/FungibleFlip.sol":{"keccak256":"0xd02386c838f8d193eb725589387a60ce1b658ba0234e92fc3f0ca9f7f5a9b1a3","urls":[],"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./IBlast.sol\";\nimport \"./IBlastPoints.sol\";\nimport \"entropy-sdk-solidity/IEntropy.sol\";\nimport \"openzeppelin-contracts/access/Ownable.sol\";\n\n/**\n *  _______  __    __  .__   __.   _______  __  .______    __       _______     _______  __       __  .______\n * |   ____||  |  |  | |  \\ |  |  /  _____||  | |   _  \\  |  |     |   ____|   |   ____||  |     |  | |   _  \\\n * |  |__   |  |  |  | |   \\|  | |  |  __  |  | |  |_)  | |  |     |  |__      |  |__   |  |     |  | |  |_)  |\n * |   __|  |  |  |  | |  . `  | |  | |_ | |  | |   _  <  |  |     |   __|     |   __|  |  |     |  | |   ___/\n * |  |     |  `--'  | |  |\\   | |  |__| | |  | |  |_)  | |  `----.|  |____    |  |     |  `----.|  | |  |\n * |__|      \\______/  |__| \\__|  \\______| |__| |______/  |_______||_______|   |__|     |_______||__| | _|\n *\n *\n * @dev Coin flip game, built on Blast, where you double up or get rugged. Powered by Pyth Entropy,\n * our protocol is fast and efficient, and we take no house rake or fee, providing true 50/50 odds.\n *\n * Website: https://fungibleflip.io\n * Twitter: https://twitter.com/FungibleFlip\n *\n * @author corbo.eth\n */\ncontract FungibleFlip is Ownable {\n\n    IBlast private blast;\n\n    IEntropy private entropy;\n\n    struct Stats {\n        uint32 lastTen;\n        uint32 numWins;\n        uint32 numLosses;\n        uint32 numHeads;\n        uint32 numTails;\n        uint8 streak;\n    }\n\n    struct FlipRequest {\n        uint64 sequenceNumber;\n        uint256 flipAmount;\n        bytes32 randomNumber;\n        address requester;\n        bool choice;\n    }\n\n    // @dev Ether values of allowed wager sizes.\n    uint256[6] public amounts;\n\n    // @dev Minimum contract balance.\n    uint256 public threshold;\n\n    // @dev Used to build leaderboard.\n    address[] public levelOneOrHigher;\n\n    // @dev Pyth Entropy provider address\n    address public entropyProvider;\n\n    // @dev (Account -> level)\n    mapping(address => uint256) public level;\n\n    // @dev (Account -> exp) (500 exp / level)\n    mapping(address => uint256) public experience;\n\n    // @dev Stores global and individual account statistics\n    mapping(address => Stats) public stats;\n\n    // @dev (Account -> sequence number) (used to fetch the vrf request)\n    mapping(address => uint64) public sequenceNumbers;\n\n    // @dev (Sequence number -> deposit data used for flip txn)\n    mapping(uint256 => FlipRequest) public requests;\n\n    event LevelUp(address indexed user, uint256 level);\n\n    event Deposit(address indexed user, uint64 sequenceNumber);\n\n    event Result(address indexed user, bool choice, bool result, uint256 amount);\n\n    constructor(\n        address _blast,\n        address _entropy,\n        address _provider,\n        uint256 _threshold,\n        uint256[6] memory _amounts\n    ) Ownable(msg.sender) {\n        blast = IBlast(_blast);\n        blast.configureClaimableGas();\n        blast.configureAutomaticYield();\n        entropy = IEntropy(_entropy);\n        entropyProvider = _provider;\n        threshold = _threshold;\n        amounts = _amounts;\n    }\n\n    /**\n     * @dev Records and stores user and global statistics after a successful flip. Heads/tails\n     * choice count, win/loss count, last ten flips, and current streak are all recorded.\n     */\n    function recordStatistics(address _user, bool _choice, bool _win) internal {\n        address global = address(this);\n\n        stats[global].lastTen = (stats[global].lastTen << 2) & 0xFFFFF;\n        stats[global].lastTen |= uint32(_choice ? 1 : 0) << 1 | (_win ? 1 : 0);\n\n        stats[_user].lastTen = (stats[_user].lastTen << 2) & 0xFFFFF;\n        stats[_user].lastTen |= uint32(_choice ? 1 : 0) << 1 | (_win ? 1 : 0);\n\n        bool winStreak = stats[_user].streak >> 7 == 1;\n        uint8 streakLength = stats[_user].streak & 0x7F;\n\n        if (_choice) {\n            stats[global].numHeads++;\n            stats[_user].numHeads++;\n        } else {\n            stats[global].numTails++;\n            stats[_user].numTails++;\n        }\n\n        if (_win) {\n            stats[global].numWins++;\n            stats[_user].numWins++;\n\n            if (winStreak) streakLength++;\n            else streakLength = 1;\n\n            stats[_user].streak = (1 << 7) | streakLength;\n        } else {\n            stats[global].numLosses++;\n            stats[_user].numLosses++;\n\n            if (!winStreak) streakLength++;\n            else streakLength = 1;\n\n            stats[_user].streak = streakLength;\n        }\n    }\n\n    /**\n     * @dev Increases an accounts experience after a flip is completed, if their experience reaches\n     * 500, their level is incremented and their experience is reset to 0. When an account reaches\n     * level 1, their address is pushed to the array ('levelOneOrHigher').\n     */\n    function increaseExperience(address _requester, uint256 _flipAmount, bool _flipResult) internal {\n        if (_flipResult) experience[_requester] += 10;\n        experience[_requester] += _flipAmount / 1000000000000000;\n\n        if (experience[_requester] >= 500) {\n            if(level[_requester] == 0) levelOneOrHigher.push(_requester);\n            level[_requester] += 1;\n            experience[_requester] -= 500;\n            emit LevelUp(_requester, level[_requester]);\n        }\n    }\n\n    /**\n     * @dev First txn in the flip process, ('userRandom') is a random bytes32 generated by the frontend,\n     * and ('userCommitment') is the hashed version. These parameters are used to obtain the sequence number\n     * from Entropy, and request a random number to determine the outcome of the coin flip.\n     */\n    function deposit(bytes32 userRandom, bytes32 userCommitment, bool choice) external payable {\n        require(\n            sequenceNumbers[msg.sender] == 0,\n            \"accounts must flip after a deposit\"\n        );\n        require(\n            address(this).balance >= threshold,\n            \"flipping is currently paused\"\n        );\n        require(\n            msg.value == amounts[0] ||\n            msg.value == amounts[1] ||\n            msg.value == amounts[2] ||\n            msg.value == amounts[3] ||\n            msg.value == amounts[4] ||\n            msg.value == amounts[5],\n            \"invalid flip amount\"\n        );\n\n        uint64 sequence = entropy.request{value: entropy.getFee(entropyProvider)}(\n            entropyProvider,\n            userCommitment,\n            true\n        );\n\n        requests[sequence] = FlipRequest({\n            sequenceNumber: sequence,\n            flipAmount: msg.value,\n            randomNumber: userRandom,\n            requester: msg.sender,\n            choice: choice\n        });\n\n        sequenceNumbers[msg.sender] = sequence;\n\n        emit Deposit(msg.sender, sequence);\n    }\n\n    /**\n     * @dev Second txn in the flip process, throws if caller is not the account linked to ('sequenceNumber').\n     * This function completes the Entropy process, revealing the random number and settling the coin flip.\n     */\n    function flip(uint64 sequenceNumber, bytes32 providerRandom) external {\n        require(\n            requests[sequenceNumber].requester == msg.sender,\n            \"unauthorized requester\"\n        );\n\n        bytes32 randomNumber = entropy.reveal(\n            entropyProvider,\n            sequenceNumber,\n            requests[sequenceNumbers[msg.sender]].randomNumber,\n            providerRandom\n        );\n\n        uint256 amount = requests[sequenceNumber].flipAmount;\n        address requester = requests[sequenceNumber].requester;\n        bool choice = requests[sequenceNumber].choice;\n        bool result = uint256(randomNumber) % 2 == 0;\n        bool win = choice == result;\n\n        emit Result(requester, choice, result, amount);\n\n        delete sequenceNumbers[requester];\n        delete requests[sequenceNumber];\n\n        recordStatistics(msg.sender, choice, win);\n        increaseExperience(requester, amount, win);\n\n        if (win) {\n            (bool success, ) = payable(requester).call{value: 2 * amount}(\"\");\n            require(success, \"transfer failed\");\n        }\n    }\n\n    // Owner functions\n    function manualReset(address user) public onlyOwner {\n        (bool success, ) = payable(user).call{value: (requests[sequenceNumbers[user]].flipAmount)}(\"\");\n        require(success, \"transfer failed\");\n        delete requests[sequenceNumbers[user]];\n        delete sequenceNumbers[user];\n    }\n\n    function setEntropy(address _entropy, address _provider) public onlyOwner {\n        entropy = IEntropy(_entropy);\n        entropyProvider = _provider;\n    }\n\n    function setPointsOperator(address _blastPoints, address _pointsOperator) public onlyOwner {\n        IBlastPoints(_blastPoints).configurePointsOperator(_pointsOperator);\n    }\n\n    function setFlipAmounts(uint256[6] memory _amounts) public onlyOwner {\n        amounts = _amounts;\n    }\n\n    function setThreshold(uint256 _threshold) public onlyOwner {\n        threshold = _threshold;\n    }\n\n    function withdraw() public payable onlyOwner {\n        (bool success, ) = owner().call{value: address(this).balance}(\"\");\n        require(success, \"transfer failed\");\n    }\n\n    function claimGas() public onlyOwner {\n        blast.claimMaxGas(address(this), owner());\n    }\n\n    receive() external payable {}\n}\n","license":"MIT"},"src/IBlast.sol":{"keccak256":"0x913c6c691be83ac1014045531d7ab4c46c525960a2cf2260a43a39256cf4cbf8","urls":[],"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IBlast {\n    function configureAutomaticYield() external;\n    function configureClaimableGas() external;\n    function claimMaxGas(address contractAddress, address recipientOfGas) external returns (uint256);\n}\n\n","license":"MIT"},"src/IBlastPoints.sol":{"keccak256":"0x7f52337da337eb0d8a622a646033a4d65f15cdec651cca8b34155aeb4758cee3","urls":[],"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IBlastPoints {\n    function configurePointsOperator(address operator) external;\n}\n","license":"MIT"}},"version":1},"ast":{"absolutePath":"src/FungibleFlip.sol","id":45769,"exportedSymbols":{"Context":[44935],"EntropyEvents":[26],"EntropyStructs":[65],"FungibleFlip":[45768],"IBlast":[46494],"IBlastPoints":[46502],"IEntropy":[166],"Ownable":[44913]},"nodeType":"SourceUnit","src":"32:9247:27","nodes":[{"id":44956,"nodeType":"PragmaDirective","src":"32:24:27","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":44957,"nodeType":"ImportDirective","src":"58:22:27","nodes":[],"absolutePath":"src/IBlast.sol","file":"./IBlast.sol","nameLocation":"-1:-1:-1","scope":45769,"sourceUnit":46495,"symbolAliases":[],"unitAlias":""},{"id":44958,"nodeType":"ImportDirective","src":"81:28:27","nodes":[],"absolutePath":"src/IBlastPoints.sol","file":"./IBlastPoints.sol","nameLocation":"-1:-1:-1","scope":45769,"sourceUnit":46503,"symbolAliases":[],"unitAlias":""},{"id":44959,"nodeType":"ImportDirective","src":"110:43:27","nodes":[],"absolutePath":"lib/@pythnetwork/entropy-sdk-solidity/IEntropy.sol","file":"entropy-sdk-solidity/IEntropy.sol","nameLocation":"-1:-1:-1","scope":45769,"sourceUnit":167,"symbolAliases":[],"unitAlias":""},{"id":44960,"nodeType":"ImportDirective","src":"154:51:27","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"openzeppelin-contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":45769,"sourceUnit":44914,"symbolAliases":[],"unitAlias":""},{"id":45768,"nodeType":"ContractDefinition","src":"1187:8091:27","nodes":[{"id":44966,"nodeType":"VariableDeclaration","src":"1227:20:27","nodes":[],"constant":false,"mutability":"mutable","name":"blast","nameLocation":"1242:5:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"},"typeName":{"id":44965,"nodeType":"UserDefinedTypeName","pathNode":{"id":44964,"name":"IBlast","nameLocations":["1227:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":46494,"src":"1227:6:27"},"referencedDeclaration":46494,"src":"1227:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"visibility":"private"},{"id":44969,"nodeType":"VariableDeclaration","src":"1254:24:27","nodes":[],"constant":false,"mutability":"mutable","name":"entropy","nameLocation":"1271:7:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"},"typeName":{"id":44968,"nodeType":"UserDefinedTypeName","pathNode":{"id":44967,"name":"IEntropy","nameLocations":["1254:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":166,"src":"1254:8:27"},"referencedDeclaration":166,"src":"1254:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"visibility":"private"},{"id":44982,"nodeType":"StructDefinition","src":"1285:166:27","nodes":[],"canonicalName":"FungibleFlip.Stats","members":[{"constant":false,"id":44971,"mutability":"mutable","name":"lastTen","nameLocation":"1315:7:27","nodeType":"VariableDeclaration","scope":44982,"src":"1308:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":44970,"name":"uint32","nodeType":"ElementaryTypeName","src":"1308:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":44973,"mutability":"mutable","name":"numWins","nameLocation":"1339:7:27","nodeType":"VariableDeclaration","scope":44982,"src":"1332:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":44972,"name":"uint32","nodeType":"ElementaryTypeName","src":"1332:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":44975,"mutability":"mutable","name":"numLosses","nameLocation":"1363:9:27","nodeType":"VariableDeclaration","scope":44982,"src":"1356:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":44974,"name":"uint32","nodeType":"ElementaryTypeName","src":"1356:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":44977,"mutability":"mutable","name":"numHeads","nameLocation":"1389:8:27","nodeType":"VariableDeclaration","scope":44982,"src":"1382:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":44976,"name":"uint32","nodeType":"ElementaryTypeName","src":"1382:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":44979,"mutability":"mutable","name":"numTails","nameLocation":"1414:8:27","nodeType":"VariableDeclaration","scope":44982,"src":"1407:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":44978,"name":"uint32","nodeType":"ElementaryTypeName","src":"1407:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":44981,"mutability":"mutable","name":"streak","nameLocation":"1438:6:27","nodeType":"VariableDeclaration","scope":44982,"src":"1432:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":44980,"name":"uint8","nodeType":"ElementaryTypeName","src":"1432:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Stats","nameLocation":"1292:5:27","scope":45768,"visibility":"public"},{"id":44993,"nodeType":"StructDefinition","src":"1457:163:27","nodes":[],"canonicalName":"FungibleFlip.FlipRequest","members":[{"constant":false,"id":44984,"mutability":"mutable","name":"sequenceNumber","nameLocation":"1493:14:27","nodeType":"VariableDeclaration","scope":44993,"src":"1486:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":44983,"name":"uint64","nodeType":"ElementaryTypeName","src":"1486:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":44986,"mutability":"mutable","name":"flipAmount","nameLocation":"1525:10:27","nodeType":"VariableDeclaration","scope":44993,"src":"1517:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1517:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":44988,"mutability":"mutable","name":"randomNumber","nameLocation":"1553:12:27","nodeType":"VariableDeclaration","scope":44993,"src":"1545:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1545:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":44990,"mutability":"mutable","name":"requester","nameLocation":"1583:9:27","nodeType":"VariableDeclaration","scope":44993,"src":"1575:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44989,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44992,"mutability":"mutable","name":"choice","nameLocation":"1607:6:27","nodeType":"VariableDeclaration","scope":44993,"src":"1602:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44991,"name":"bool","nodeType":"ElementaryTypeName","src":"1602:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlipRequest","nameLocation":"1464:11:27","scope":45768,"visibility":"public"},{"id":44997,"nodeType":"VariableDeclaration","src":"1675:25:27","nodes":[],"constant":false,"functionSelector":"45f0a44f","mutability":"mutable","name":"amounts","nameLocation":"1693:7:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6]"},"typeName":{"baseType":{"id":44994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1675:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":44996,"length":{"hexValue":"36","id":44995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1683:1:27","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"1675:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6]"}},"visibility":"public"},{"id":44999,"nodeType":"VariableDeclaration","src":"1745:24:27","nodes":[],"constant":false,"functionSelector":"42cde4e8","mutability":"mutable","name":"threshold","nameLocation":"1760:9:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"id":45002,"nodeType":"VariableDeclaration","src":"1815:33:27","nodes":[],"constant":false,"functionSelector":"00645777","mutability":"mutable","name":"levelOneOrHigher","nameLocation":"1832:16:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":45000,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":45001,"nodeType":"ArrayTypeName","src":"1815:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"id":45004,"nodeType":"VariableDeclaration","src":"1897:30:27","nodes":[],"constant":false,"functionSelector":"5bf414ac","mutability":"mutable","name":"entropyProvider","nameLocation":"1912:15:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45003,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"id":45008,"nodeType":"VariableDeclaration","src":"1965:40:27","nodes":[],"constant":false,"functionSelector":"d41b6db6","mutability":"mutable","name":"level","nameLocation":"2000:5:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":45007,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":45005,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1965:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":45006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1984:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"id":45012,"nodeType":"VariableDeclaration","src":"2059:45:27","nodes":[],"constant":false,"functionSelector":"d16ef1b5","mutability":"mutable","name":"experience","nameLocation":"2094:10:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":45011,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":45009,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2059:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":45010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"id":45017,"nodeType":"VariableDeclaration","src":"2171:38:27","nodes":[],"constant":false,"functionSelector":"8bcdcbf3","mutability":"mutable","name":"stats","nameLocation":"2204:5:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats)"},"typeName":{"id":45016,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":45013,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2171:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":45015,"nodeType":"UserDefinedTypeName","pathNode":{"id":45014,"name":"Stats","nameLocations":["2190:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":44982,"src":"2190:5:27"},"referencedDeclaration":44982,"src":"2190:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage_ptr","typeString":"struct FungibleFlip.Stats"}}},"visibility":"public"},{"id":45021,"nodeType":"VariableDeclaration","src":"2289:49:27","nodes":[],"constant":false,"functionSelector":"e1fab227","mutability":"mutable","name":"sequenceNumbers","nameLocation":"2323:15:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"},"typeName":{"id":45020,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":45018,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2289:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":45019,"name":"uint64","nodeType":"ElementaryTypeName","src":"2308:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},"visibility":"public"},{"id":45026,"nodeType":"VariableDeclaration","src":"2409:47:27","nodes":[],"constant":false,"functionSelector":"81d12c58","mutability":"mutable","name":"requests","nameLocation":"2448:8:27","scope":45768,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest)"},"typeName":{"id":45025,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":45022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2409:31:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":45024,"nodeType":"UserDefinedTypeName","pathNode":{"id":45023,"name":"FlipRequest","nameLocations":["2428:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":44993,"src":"2428:11:27"},"referencedDeclaration":44993,"src":"2428:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage_ptr","typeString":"struct FungibleFlip.FlipRequest"}}},"visibility":"public"},{"id":45032,"nodeType":"EventDefinition","src":"2463:51:27","nodes":[],"anonymous":false,"eventSelector":"91e51c29e7e87a74ad3b8ccba98538970f50a4309242735467f41e27c6b0fbac","name":"LevelUp","nameLocation":"2469:7:27","parameters":{"id":45031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45028,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2493:4:27","nodeType":"VariableDeclaration","scope":45032,"src":"2477:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45027,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45030,"indexed":false,"mutability":"mutable","name":"level","nameLocation":"2507:5:27","nodeType":"VariableDeclaration","scope":45032,"src":"2499:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2476:37:27"}},{"id":45038,"nodeType":"EventDefinition","src":"2520:59:27","nodes":[],"anonymous":false,"eventSelector":"0ee94a97c7c69ce2eb8cfb09bacc78d63a73b5e0fbed0d13a079190ff876ae3a","name":"Deposit","nameLocation":"2526:7:27","parameters":{"id":45037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45034,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2550:4:27","nodeType":"VariableDeclaration","scope":45038,"src":"2534:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45033,"name":"address","nodeType":"ElementaryTypeName","src":"2534:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45036,"indexed":false,"mutability":"mutable","name":"sequenceNumber","nameLocation":"2563:14:27","nodeType":"VariableDeclaration","scope":45038,"src":"2556:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":45035,"name":"uint64","nodeType":"ElementaryTypeName","src":"2556:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2533:45:27"}},{"id":45048,"nodeType":"EventDefinition","src":"2585:77:27","nodes":[],"anonymous":false,"eventSelector":"2afadff3ac4aa3323ea0a8a6161f11227b249516d9889715a4eae4a1993137ea","name":"Result","nameLocation":"2591:6:27","parameters":{"id":45047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45040,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2614:4:27","nodeType":"VariableDeclaration","scope":45048,"src":"2598:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45039,"name":"address","nodeType":"ElementaryTypeName","src":"2598:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45042,"indexed":false,"mutability":"mutable","name":"choice","nameLocation":"2625:6:27","nodeType":"VariableDeclaration","scope":45048,"src":"2620:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45041,"name":"bool","nodeType":"ElementaryTypeName","src":"2620:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":45044,"indexed":false,"mutability":"mutable","name":"result","nameLocation":"2638:6:27","nodeType":"VariableDeclaration","scope":45048,"src":"2633:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45043,"name":"bool","nodeType":"ElementaryTypeName","src":"2633:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":45046,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2654:6:27","nodeType":"VariableDeclaration","scope":45048,"src":"2646:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2597:64:27"}},{"id":45102,"nodeType":"FunctionDefinition","src":"2668:433:27","nodes":[],"body":{"id":45101,"nodeType":"Block","src":"2847:254:27","nodes":[],"statements":[{"expression":{"id":45071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45067,"name":"blast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44966,"src":"2857:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":45069,"name":"_blast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45050,"src":"2872:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45068,"name":"IBlast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46494,"src":"2865:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBlast_$46494_$","typeString":"type(contract IBlast)"}},"id":45070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"src":"2857:22:27","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"id":45072,"nodeType":"ExpressionStatement","src":"2857:22:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":45073,"name":"blast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44966,"src":"2889:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"id":45075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2895:21:27","memberName":"configureClaimableGas","nodeType":"MemberAccess","referencedDeclaration":46484,"src":"2889:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":45076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2889:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45077,"nodeType":"ExpressionStatement","src":"2889:29:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":45078,"name":"blast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44966,"src":"2928:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"id":45080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2934:23:27","memberName":"configureAutomaticYield","nodeType":"MemberAccess","referencedDeclaration":46481,"src":"2928:29:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":45081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45082,"nodeType":"ExpressionStatement","src":"2928:31:27"},{"expression":{"id":45087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45083,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44969,"src":"2969:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":45085,"name":"_entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45052,"src":"2988:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45084,"name":"IEntropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2979:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntropy_$166_$","typeString":"type(contract IEntropy)"}},"id":45086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2979:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"src":"2969:28:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"id":45088,"nodeType":"ExpressionStatement","src":"2969:28:27"},{"expression":{"id":45091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45089,"name":"entropyProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45004,"src":"3007:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45090,"name":"_provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45054,"src":"3025:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3007:27:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":45092,"nodeType":"ExpressionStatement","src":"3007:27:27"},{"expression":{"id":45095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45093,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44999,"src":"3044:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45094,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45056,"src":"3056:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3044:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45096,"nodeType":"ExpressionStatement","src":"3044:22:27"},{"expression":{"id":45099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45097,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"3076:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45098,"name":"_amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45060,"src":"3086:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"src":"3076:18:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45100,"nodeType":"ExpressionStatement","src":"3076:18:27"}]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":45063,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2835:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2839:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2835:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":45065,"kind":"baseConstructorSpecifier","modifierName":{"id":45062,"name":"Ownable","nameLocations":["2827:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":44913,"src":"2827:7:27"},"nodeType":"ModifierInvocation","src":"2827:19:27"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":45061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45050,"mutability":"mutable","name":"_blast","nameLocation":"2697:6:27","nodeType":"VariableDeclaration","scope":45102,"src":"2689:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45049,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45052,"mutability":"mutable","name":"_entropy","nameLocation":"2721:8:27","nodeType":"VariableDeclaration","scope":45102,"src":"2713:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45051,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45054,"mutability":"mutable","name":"_provider","nameLocation":"2747:9:27","nodeType":"VariableDeclaration","scope":45102,"src":"2739:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45053,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45056,"mutability":"mutable","name":"_threshold","nameLocation":"2774:10:27","nodeType":"VariableDeclaration","scope":45102,"src":"2766:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45060,"mutability":"mutable","name":"_amounts","nameLocation":"2812:8:27","nodeType":"VariableDeclaration","scope":45102,"src":"2794:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6]"},"typeName":{"baseType":{"id":45057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2794:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45059,"length":{"hexValue":"36","id":45058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2802:1:27","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"2794:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6]"}},"visibility":"internal"}],"src":"2679:147:27"},"returnParameters":{"id":45066,"nodeType":"ParameterList","parameters":[],"src":"2847:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45306,"nodeType":"FunctionDefinition","src":"3308:1206:27","nodes":[],"body":{"id":45305,"nodeType":"Block","src":"3383:1131:27","nodes":[],"statements":[{"assignments":[45113],"declarations":[{"constant":false,"id":45113,"mutability":"mutable","name":"global","nameLocation":"3401:6:27","nodeType":"VariableDeclaration","scope":45305,"src":"3393:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45112,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":45118,"initialValue":{"arguments":[{"id":45116,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3418:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}],"id":45115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":45114,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:27","typeDescriptions":{}}},"id":45117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3393:30:27"},{"expression":{"id":45132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":45119,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3434:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45121,"indexExpression":{"id":45120,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"3440:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3434:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3448:7:27","memberName":"lastTen","nodeType":"MemberAccess","referencedDeclaration":44971,"src":"3434:21:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":45123,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3459:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45125,"indexExpression":{"id":45124,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"3465:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3459:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3473:7:27","memberName":"lastTen","nodeType":"MemberAccess","referencedDeclaration":44971,"src":"3459:21:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":45127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3484:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3459:26:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":45129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3458:28:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646464646","id":45130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:7:27","typeDescriptions":{"typeIdentifier":"t_rational_1048575_by_1","typeString":"int_const 1048575"},"value":"0xFFFFF"},"src":"3458:38:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3434:62:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45133,"nodeType":"ExpressionStatement","src":"3434:62:27"},{"expression":{"id":45153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":45134,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3506:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45136,"indexExpression":{"id":45135,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"3512:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3520:7:27","memberName":"lastTen","nodeType":"MemberAccess","referencedDeclaration":44971,"src":"3506:21:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"condition":{"id":45140,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45107,"src":"3538:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":45142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3552:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":45143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3538:15:27","trueExpression":{"hexValue":"31","id":45141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3548:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":45139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3531:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":45138,"name":"uint32","nodeType":"ElementaryTypeName","src":"3531:6:27","typeDescriptions":{}}},"id":45144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"31","id":45145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3558:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3531:28:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"condition":{"id":45147,"name":"_win","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45109,"src":"3563:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":45149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3574:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":45150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3563:12:27","trueExpression":{"hexValue":"31","id":45148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3570:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":45151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3562:14:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3531:45:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3506:70:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45154,"nodeType":"ExpressionStatement","src":"3506:70:27"},{"expression":{"id":45168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":45155,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3587:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45157,"indexExpression":{"id":45156,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"3593:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3587:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3600:7:27","memberName":"lastTen","nodeType":"MemberAccess","referencedDeclaration":44971,"src":"3587:20:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":45159,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3611:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45161,"indexExpression":{"id":45160,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"3617:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3611:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3624:7:27","memberName":"lastTen","nodeType":"MemberAccess","referencedDeclaration":44971,"src":"3611:20:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":45163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3611:25:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":45165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3610:27:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646464646","id":45166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3640:7:27","typeDescriptions":{"typeIdentifier":"t_rational_1048575_by_1","typeString":"int_const 1048575"},"value":"0xFFFFF"},"src":"3610:37:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3587:60:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45169,"nodeType":"ExpressionStatement","src":"3587:60:27"},{"expression":{"id":45189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":45170,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3657:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45172,"indexExpression":{"id":45171,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"3663:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3670:7:27","memberName":"lastTen","nodeType":"MemberAccess","referencedDeclaration":44971,"src":"3657:20:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":45182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"condition":{"id":45176,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45107,"src":"3688:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":45178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3702:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":45179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3688:15:27","trueExpression":{"hexValue":"31","id":45177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3698:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":45175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3681:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":45174,"name":"uint32","nodeType":"ElementaryTypeName","src":"3681:6:27","typeDescriptions":{}}},"id":45180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"31","id":45181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3708:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3681:28:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"condition":{"id":45183,"name":"_win","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45109,"src":"3713:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":45185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3724:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":45186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3713:12:27","trueExpression":{"hexValue":"31","id":45184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":45187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3712:14:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3681:45:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3657:69:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45190,"nodeType":"ExpressionStatement","src":"3657:69:27"},{"assignments":[45192],"declarations":[{"constant":false,"id":45192,"mutability":"mutable","name":"winStreak","nameLocation":"3742:9:27","nodeType":"VariableDeclaration","scope":45305,"src":"3737:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45191,"name":"bool","nodeType":"ElementaryTypeName","src":"3737:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":45201,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":45200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":45198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":45193,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3754:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45195,"indexExpression":{"id":45194,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"3760:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3754:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3767:6:27","memberName":"streak","nodeType":"MemberAccess","referencedDeclaration":44981,"src":"3754:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"37","id":45197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3777:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3754:24:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":45199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3782:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3754:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3737:46:27"},{"assignments":[45203],"declarations":[{"constant":false,"id":45203,"mutability":"mutable","name":"streakLength","nameLocation":"3799:12:27","nodeType":"VariableDeclaration","scope":45305,"src":"3793:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":45202,"name":"uint8","nodeType":"ElementaryTypeName","src":"3793:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":45210,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":45209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":45204,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3814:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45206,"indexExpression":{"id":45205,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"3820:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3814:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3827:6:27","memberName":"streak","nodeType":"MemberAccess","referencedDeclaration":44981,"src":"3814:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783746","id":45208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3836:4:27","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7F"},"src":"3814:26:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3793:47:27"},{"condition":{"id":45211,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45107,"src":"3855:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":45237,"nodeType":"Block","src":"3956:86:27","statements":[{"expression":{"id":45229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3970:24:27","subExpression":{"expression":{"baseExpression":{"id":45225,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3970:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45227,"indexExpression":{"id":45226,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"3976:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3970:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3984:8:27","memberName":"numTails","nodeType":"MemberAccess","referencedDeclaration":44979,"src":"3970:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45230,"nodeType":"ExpressionStatement","src":"3970:24:27"},{"expression":{"id":45235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4008:23:27","subExpression":{"expression":{"baseExpression":{"id":45231,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4008:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45233,"indexExpression":{"id":45232,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"4014:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4008:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4021:8:27","memberName":"numTails","nodeType":"MemberAccess","referencedDeclaration":44979,"src":"4008:21:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45236,"nodeType":"ExpressionStatement","src":"4008:23:27"}]},"id":45238,"nodeType":"IfStatement","src":"3851:191:27","trueBody":{"id":45224,"nodeType":"Block","src":"3864:86:27","statements":[{"expression":{"id":45216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3878:24:27","subExpression":{"expression":{"baseExpression":{"id":45212,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3878:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45214,"indexExpression":{"id":45213,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"3884:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3878:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3892:8:27","memberName":"numHeads","nodeType":"MemberAccess","referencedDeclaration":44977,"src":"3878:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45217,"nodeType":"ExpressionStatement","src":"3878:24:27"},{"expression":{"id":45222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3916:23:27","subExpression":{"expression":{"baseExpression":{"id":45218,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"3916:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45220,"indexExpression":{"id":45219,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"3922:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3916:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3929:8:27","memberName":"numHeads","nodeType":"MemberAccess","referencedDeclaration":44977,"src":"3916:21:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45223,"nodeType":"ExpressionStatement","src":"3916:23:27"}]}},{"condition":{"id":45239,"name":"_win","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45109,"src":"4056:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":45303,"nodeType":"Block","src":"4291:217:27","statements":[{"expression":{"id":45278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4305:25:27","subExpression":{"expression":{"baseExpression":{"id":45274,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4305:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45276,"indexExpression":{"id":45275,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"4311:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4305:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4319:9:27","memberName":"numLosses","nodeType":"MemberAccess","referencedDeclaration":44975,"src":"4305:23:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45279,"nodeType":"ExpressionStatement","src":"4305:25:27"},{"expression":{"id":45284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4344:24:27","subExpression":{"expression":{"baseExpression":{"id":45280,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4344:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45282,"indexExpression":{"id":45281,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"4350:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4344:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4357:9:27","memberName":"numLosses","nodeType":"MemberAccess","referencedDeclaration":44975,"src":"4344:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45285,"nodeType":"ExpressionStatement","src":"4344:24:27"},{"condition":{"id":45287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4387:10:27","subExpression":{"id":45286,"name":"winStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45192,"src":"4388:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":45293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45291,"name":"streakLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45203,"src":"4432:12:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":45292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4447:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4432:16:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":45294,"nodeType":"ExpressionStatement","src":"4432:16:27"},"id":45295,"nodeType":"IfStatement","src":"4383:65:27","trueBody":{"expression":{"id":45289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4399:14:27","subExpression":{"id":45288,"name":"streakLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45203,"src":"4399:12:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":45290,"nodeType":"ExpressionStatement","src":"4399:14:27"}},{"expression":{"id":45301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":45296,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4463:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45298,"indexExpression":{"id":45297,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"4469:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4463:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4476:6:27","memberName":"streak","nodeType":"MemberAccess","referencedDeclaration":44981,"src":"4463:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45300,"name":"streakLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45203,"src":"4485:12:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4463:34:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":45302,"nodeType":"ExpressionStatement","src":"4463:34:27"}]},"id":45304,"nodeType":"IfStatement","src":"4052:456:27","trueBody":{"id":45273,"nodeType":"Block","src":"4062:223:27","statements":[{"expression":{"id":45244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4076:23:27","subExpression":{"expression":{"baseExpression":{"id":45240,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4076:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45242,"indexExpression":{"id":45241,"name":"global","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45113,"src":"4082:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4076:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4090:7:27","memberName":"numWins","nodeType":"MemberAccess","referencedDeclaration":44973,"src":"4076:21:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45245,"nodeType":"ExpressionStatement","src":"4076:23:27"},{"expression":{"id":45250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4113:22:27","subExpression":{"expression":{"baseExpression":{"id":45246,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4113:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45248,"indexExpression":{"id":45247,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"4119:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4113:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4126:7:27","memberName":"numWins","nodeType":"MemberAccess","referencedDeclaration":44973,"src":"4113:20:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":45251,"nodeType":"ExpressionStatement","src":"4113:22:27"},{"condition":{"id":45252,"name":"winStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45192,"src":"4154:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":45258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45256,"name":"streakLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45203,"src":"4198:12:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":45257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4213:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4198:16:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":45259,"nodeType":"ExpressionStatement","src":"4198:16:27"},"id":45260,"nodeType":"IfStatement","src":"4150:64:27","trueBody":{"expression":{"id":45254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4165:14:27","subExpression":{"id":45253,"name":"streakLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45203,"src":"4165:12:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":45255,"nodeType":"ExpressionStatement","src":"4165:14:27"}},{"expression":{"id":45271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":45261,"name":"stats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45017,"src":"4229:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stats_$44982_storage_$","typeString":"mapping(address => struct FungibleFlip.Stats storage ref)"}},"id":45263,"indexExpression":{"id":45262,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45105,"src":"4235:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4229:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_Stats_$44982_storage","typeString":"struct FungibleFlip.Stats storage ref"}},"id":45264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4242:6:27","memberName":"streak","nodeType":"MemberAccess","referencedDeclaration":44981,"src":"4229:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":45270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"id":45267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":45265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4252:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":45266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4257:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4252:6:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}}],"id":45268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4251:8:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":45269,"name":"streakLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45203,"src":"4262:12:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4251:23:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4229:45:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":45272,"nodeType":"ExpressionStatement","src":"4229:45:27"}]}}]},"documentation":{"id":45103,"nodeType":"StructuredDocumentation","src":"3107:196:27","text":" @dev Records and stores user and global statistics after a successful flip. Heads/tails\n choice count, win/loss count, last ten flips, and current streak are all recorded."},"implemented":true,"kind":"function","modifiers":[],"name":"recordStatistics","nameLocation":"3317:16:27","parameters":{"id":45110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45105,"mutability":"mutable","name":"_user","nameLocation":"3342:5:27","nodeType":"VariableDeclaration","scope":45306,"src":"3334:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45104,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45107,"mutability":"mutable","name":"_choice","nameLocation":"3354:7:27","nodeType":"VariableDeclaration","scope":45306,"src":"3349:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45106,"name":"bool","nodeType":"ElementaryTypeName","src":"3349:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":45109,"mutability":"mutable","name":"_win","nameLocation":"3368:4:27","nodeType":"VariableDeclaration","scope":45306,"src":"3363:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45108,"name":"bool","nodeType":"ElementaryTypeName","src":"3363:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3333:40:27"},"returnParameters":{"id":45111,"nodeType":"ParameterList","parameters":[],"src":"3383:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":45371,"nodeType":"FunctionDefinition","src":"4810:490:27","nodes":[],"body":{"id":45370,"nodeType":"Block","src":"4906:394:27","nodes":[],"statements":[{"condition":{"id":45316,"name":"_flipResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45313,"src":"4920:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45323,"nodeType":"IfStatement","src":"4916:45:27","trueBody":{"expression":{"id":45321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":45317,"name":"experience","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45012,"src":"4933:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45319,"indexExpression":{"id":45318,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"4944:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4933:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3130","id":45320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4959:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4933:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45322,"nodeType":"ExpressionStatement","src":"4933:28:27"}},{"expression":{"id":45330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":45324,"name":"experience","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45012,"src":"4971:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45326,"indexExpression":{"id":45325,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"4982:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4971:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45327,"name":"_flipAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45311,"src":"4997:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030303030303030303030303030","id":45328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5011:16:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"1000000000000000"},"src":"4997:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4971:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45331,"nodeType":"ExpressionStatement","src":"4971:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":45332,"name":"experience","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45012,"src":"5042:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45334,"indexExpression":{"id":45333,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5053:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5042:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"353030","id":45335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5068:3:27","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"5042:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45369,"nodeType":"IfStatement","src":"5038:256:27","trueBody":{"id":45368,"nodeType":"Block","src":"5073:221:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":45337,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45008,"src":"5090:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45339,"indexExpression":{"id":45338,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5096:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5090:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":45340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5111:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5090:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45348,"nodeType":"IfStatement","src":"5087:60:27","trueBody":{"expression":{"arguments":[{"id":45345,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5136:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":45342,"name":"levelOneOrHigher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45002,"src":"5114:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":45344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5131:4:27","memberName":"push","nodeType":"MemberAccess","src":"5114:21:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":45346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5114:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45347,"nodeType":"ExpressionStatement","src":"5114:33:27"}},{"expression":{"id":45353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":45349,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45008,"src":"5161:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45351,"indexExpression":{"id":45350,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5167:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5161:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":45352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5182:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5161:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45354,"nodeType":"ExpressionStatement","src":"5161:22:27"},{"expression":{"id":45359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":45355,"name":"experience","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45012,"src":"5197:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45357,"indexExpression":{"id":45356,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5208:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5197:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"353030","id":45358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:3:27","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"5197:29:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45360,"nodeType":"ExpressionStatement","src":"5197:29:27"},{"eventCall":{"arguments":[{"id":45362,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5253:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":45363,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45008,"src":"5265:5:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":45365,"indexExpression":{"id":45364,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45309,"src":"5271:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5265:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":45361,"name":"LevelUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45032,"src":"5245:7:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":45366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5245:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45367,"nodeType":"EmitStatement","src":"5240:43:27"}]}}]},"documentation":{"id":45307,"nodeType":"StructuredDocumentation","src":"4520:285:27","text":" @dev Increases an accounts experience after a flip is completed, if their experience reaches\n 500, their level is incremented and their experience is reset to 0. When an account reaches\n level 1, their address is pushed to the array ('levelOneOrHigher')."},"implemented":true,"kind":"function","modifiers":[],"name":"increaseExperience","nameLocation":"4819:18:27","parameters":{"id":45314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45309,"mutability":"mutable","name":"_requester","nameLocation":"4846:10:27","nodeType":"VariableDeclaration","scope":45371,"src":"4838:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45308,"name":"address","nodeType":"ElementaryTypeName","src":"4838:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45311,"mutability":"mutable","name":"_flipAmount","nameLocation":"4866:11:27","nodeType":"VariableDeclaration","scope":45371,"src":"4858:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4858:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45313,"mutability":"mutable","name":"_flipResult","nameLocation":"4884:11:27","nodeType":"VariableDeclaration","scope":45371,"src":"4879:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45312,"name":"bool","nodeType":"ElementaryTypeName","src":"4879:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4837:59:27"},"returnParameters":{"id":45315,"nodeType":"ParameterList","parameters":[],"src":"4906:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":45489,"nodeType":"FunctionDefinition","src":"5628:1126:27","nodes":[],"body":{"id":45488,"nodeType":"Block","src":"5719:1035:27","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":45387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":45382,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"5750:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45385,"indexExpression":{"expression":{"id":45383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5766:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5770:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5766:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5750:27:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":45386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5750:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e7473206d75737420666c69702061667465722061206465706f736974","id":45388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5796:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_557f752241bd1d9c994791252181a442620e891c76144904b74e7b1cec0e5458","typeString":"literal_string \"accounts must flip after a deposit\""},"value":"accounts must flip after a deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_557f752241bd1d9c994791252181a442620e891c76144904b74e7b1cec0e5458","typeString":"literal_string \"accounts must flip after a deposit\""}],"id":45381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5729:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5729:113:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45390,"nodeType":"ExpressionStatement","src":"5729:113:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":45394,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5881:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}],"id":45393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5873:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":45392,"name":"address","nodeType":"ElementaryTypeName","src":"5873:7:27","typeDescriptions":{}}},"id":45395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":45396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5887:7:27","memberName":"balance","nodeType":"MemberAccess","src":"5873:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":45397,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44999,"src":"5898:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5873:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"666c697070696e672069732063757272656e746c7920706175736564","id":45399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5921:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2ffbdbf89a397862aa0df07b49c4c49ee7978bbef40a28df1d5c218b31f09cb","typeString":"literal_string \"flipping is currently paused\""},"value":"flipping is currently paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2ffbdbf89a397862aa0df07b49c4c49ee7978bbef40a28df1d5c218b31f09cb","typeString":"literal_string \"flipping is currently paused\""}],"id":45391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5852:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5852:109:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45401,"nodeType":"ExpressionStatement","src":"5852:109:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":45443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":45436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":45429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":45422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":45415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":45403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5992:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5996:5:27","memberName":"value","nodeType":"MemberAccess","src":"5992:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":45405,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"6005:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45407,"indexExpression":{"hexValue":"30","id":45406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6013:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6005:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5992:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":45409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6031:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6035:5:27","memberName":"value","nodeType":"MemberAccess","src":"6031:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":45411,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"6044:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45413,"indexExpression":{"hexValue":"31","id":45412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6052:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6044:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6031:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5992:62:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":45416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6070:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6074:5:27","memberName":"value","nodeType":"MemberAccess","src":"6070:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":45418,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"6083:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45420,"indexExpression":{"hexValue":"32","id":45419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6091:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6083:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6070:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5992:101:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":45423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6109:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6113:5:27","memberName":"value","nodeType":"MemberAccess","src":"6109:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":45425,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"6122:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45427,"indexExpression":{"hexValue":"33","id":45426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6130:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6122:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6109:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5992:140:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":45430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6148:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6152:5:27","memberName":"value","nodeType":"MemberAccess","src":"6148:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":45432,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"6161:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45434,"indexExpression":{"hexValue":"34","id":45433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6161:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5992:179:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":45437,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6187:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:5:27","memberName":"value","nodeType":"MemberAccess","src":"6187:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":45439,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"6200:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45441,"indexExpression":{"hexValue":"35","id":45440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6208:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6200:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6187:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5992:218:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420666c697020616d6f756e74","id":45444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6224:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_140638a229976f7d10b300039fb2bf2a9dab5ed2df10aa4044c0b9fd779608b8","typeString":"literal_string \"invalid flip amount\""},"value":"invalid flip amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_140638a229976f7d10b300039fb2bf2a9dab5ed2df10aa4044c0b9fd779608b8","typeString":"literal_string \"invalid flip amount\""}],"id":45402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5971:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5971:284:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45446,"nodeType":"ExpressionStatement","src":"5971:284:27"},{"assignments":[45448],"declarations":[{"constant":false,"id":45448,"mutability":"mutable","name":"sequence","nameLocation":"6273:8:27","nodeType":"VariableDeclaration","scope":45488,"src":"6266:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":45447,"name":"uint64","nodeType":"ElementaryTypeName","src":"6266:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":45460,"initialValue":{"arguments":[{"id":45456,"name":"entropyProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45004,"src":"6353:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45457,"name":"userCommitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45376,"src":"6382:14:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":45458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6410:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":45449,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44969,"src":"6284:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"id":45450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6292:7:27","memberName":"request","nodeType":"MemberAccess","referencedDeclaration":99,"src":"6284:15:27","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes32_$_t_bool_$returns$_t_uint64_$","typeString":"function (address,bytes32,bool) payable external returns (uint64)"}},"id":45455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":45453,"name":"entropyProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45004,"src":"6322:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":45451,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44969,"src":"6307:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"id":45452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6315:6:27","memberName":"getFee","nodeType":"MemberAccess","referencedDeclaration":142,"src":"6307:14:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint128_$","typeString":"function (address) view external returns (uint128)"}},"id":45454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6307:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"src":"6284:55:27","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes32_$_t_bool_$returns$_t_uint64_$value","typeString":"function (address,bytes32,bool) payable external returns (uint64)"}},"id":45459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:140:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"6266:158:27"},{"expression":{"id":45473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":45461,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"6435:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45463,"indexExpression":{"id":45462,"name":"sequence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45448,"src":"6444:8:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6435:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":45465,"name":"sequence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45448,"src":"6498:8:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":45466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6532:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6536:5:27","memberName":"value","nodeType":"MemberAccess","src":"6532:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":45468,"name":"userRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45374,"src":"6569:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":45469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6604:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6608:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6604:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45471,"name":"choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45378,"src":"6636:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":45464,"name":"FlipRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44993,"src":"6456:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FlipRequest_$44993_storage_ptr_$","typeString":"type(struct FungibleFlip.FlipRequest storage pointer)"}},"id":45472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6482:14:27","6520:10:27","6555:12:27","6593:9:27","6628:6:27"],"names":["sequenceNumber","flipAmount","randomNumber","requester","choice"],"nodeType":"FunctionCall","src":"6456:197:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_memory_ptr","typeString":"struct FungibleFlip.FlipRequest memory"}},"src":"6435:218:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45474,"nodeType":"ExpressionStatement","src":"6435:218:27"},{"expression":{"id":45480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":45475,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"6664:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45478,"indexExpression":{"expression":{"id":45476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6680:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6684:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6680:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6664:27:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45479,"name":"sequence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45448,"src":"6694:8:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6664:38:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":45481,"nodeType":"ExpressionStatement","src":"6664:38:27"},{"eventCall":{"arguments":[{"expression":{"id":45483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6726:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6730:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6726:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45485,"name":"sequence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45448,"src":"6738:8:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":45482,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45038,"src":"6718:7:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$","typeString":"function (address,uint64)"}},"id":45486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6718:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45487,"nodeType":"EmitStatement","src":"6713:34:27"}]},"documentation":{"id":45372,"nodeType":"StructuredDocumentation","src":"5306:317:27","text":" @dev First txn in the flip process, ('userRandom') is a random bytes32 generated by the frontend,\n and ('userCommitment') is the hashed version. These parameters are used to obtain the sequence number\n from Entropy, and request a random number to determine the outcome of the coin flip."},"functionSelector":"a7b10884","implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5637:7:27","parameters":{"id":45379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45374,"mutability":"mutable","name":"userRandom","nameLocation":"5653:10:27","nodeType":"VariableDeclaration","scope":45489,"src":"5645:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5645:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":45376,"mutability":"mutable","name":"userCommitment","nameLocation":"5673:14:27","nodeType":"VariableDeclaration","scope":45489,"src":"5665:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5665:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":45378,"mutability":"mutable","name":"choice","nameLocation":"5694:6:27","nodeType":"VariableDeclaration","scope":45489,"src":"5689:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45377,"name":"bool","nodeType":"ElementaryTypeName","src":"5689:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5644:57:27"},"returnParameters":{"id":45380,"nodeType":"ParameterList","parameters":[],"src":"5719:0:27"},"scope":45768,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":45615,"nodeType":"FunctionDefinition","src":"6994:1088:27","nodes":[],"body":{"id":45614,"nodeType":"Block","src":"7064:1018:27","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":45504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":45498,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"7095:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45500,"indexExpression":{"id":45499,"name":"sequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45492,"src":"7104:14:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7095:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7120:9:27","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":44990,"src":"7095:34:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":45502,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7133:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7137:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7133:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7095:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"756e617574686f72697a656420726571756573746572","id":45505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7157:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ad7948517fd7caff882b258ef1ddef94618ee0edc0cd17372f7ce47442148a3","typeString":"literal_string \"unauthorized requester\""},"value":"unauthorized requester"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ad7948517fd7caff882b258ef1ddef94618ee0edc0cd17372f7ce47442148a3","typeString":"literal_string \"unauthorized requester\""}],"id":45497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7074:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7074:117:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45507,"nodeType":"ExpressionStatement","src":"7074:117:27"},{"assignments":[45509],"declarations":[{"constant":false,"id":45509,"mutability":"mutable","name":"randomNumber","nameLocation":"7210:12:27","nodeType":"VariableDeclaration","scope":45614,"src":"7202:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7202:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":45523,"initialValue":{"arguments":[{"id":45512,"name":"entropyProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45004,"src":"7253:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45513,"name":"sequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45492,"src":"7282:14:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"baseExpression":{"id":45514,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"7310:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45519,"indexExpression":{"baseExpression":{"id":45515,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"7319:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45518,"indexExpression":{"expression":{"id":45516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7335:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7339:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7335:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7319:27:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7310:37:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7348:12:27","memberName":"randomNumber","nodeType":"MemberAccess","referencedDeclaration":44988,"src":"7310:50:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":45521,"name":"providerRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45494,"src":"7374:14:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":45510,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44969,"src":"7225:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"id":45511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7233:6:27","memberName":"reveal","nodeType":"MemberAccess","referencedDeclaration":112,"src":"7225:14:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint64_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (address,uint64,bytes32,bytes32) external returns (bytes32)"}},"id":45522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7225:173:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7202:196:27"},{"assignments":[45525],"declarations":[{"constant":false,"id":45525,"mutability":"mutable","name":"amount","nameLocation":"7417:6:27","nodeType":"VariableDeclaration","scope":45614,"src":"7409:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45524,"name":"uint256","nodeType":"ElementaryTypeName","src":"7409:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":45530,"initialValue":{"expression":{"baseExpression":{"id":45526,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"7426:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45528,"indexExpression":{"id":45527,"name":"sequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45492,"src":"7435:14:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7426:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7451:10:27","memberName":"flipAmount","nodeType":"MemberAccess","referencedDeclaration":44986,"src":"7426:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7409:52:27"},{"assignments":[45532],"declarations":[{"constant":false,"id":45532,"mutability":"mutable","name":"requester","nameLocation":"7479:9:27","nodeType":"VariableDeclaration","scope":45614,"src":"7471:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45531,"name":"address","nodeType":"ElementaryTypeName","src":"7471:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":45537,"initialValue":{"expression":{"baseExpression":{"id":45533,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"7491:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45535,"indexExpression":{"id":45534,"name":"sequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45492,"src":"7500:14:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7491:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7516:9:27","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":44990,"src":"7491:34:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7471:54:27"},{"assignments":[45539],"declarations":[{"constant":false,"id":45539,"mutability":"mutable","name":"choice","nameLocation":"7540:6:27","nodeType":"VariableDeclaration","scope":45614,"src":"7535:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45538,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":45544,"initialValue":{"expression":{"baseExpression":{"id":45540,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"7549:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45542,"indexExpression":{"id":45541,"name":"sequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45492,"src":"7558:14:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7549:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7574:6:27","memberName":"choice","nodeType":"MemberAccess","referencedDeclaration":44992,"src":"7549:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7535:45:27"},{"assignments":[45546],"declarations":[{"constant":false,"id":45546,"mutability":"mutable","name":"result","nameLocation":"7595:6:27","nodeType":"VariableDeclaration","scope":45614,"src":"7590:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45545,"name":"bool","nodeType":"ElementaryTypeName","src":"7590:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":45555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":45549,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45509,"src":"7612:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":45548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7604:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":45547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7604:7:27","typeDescriptions":{}}},"id":45550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":45551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7628:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7604:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":45553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7633:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7604:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7590:44:27"},{"assignments":[45557],"declarations":[{"constant":false,"id":45557,"mutability":"mutable","name":"win","nameLocation":"7649:3:27","nodeType":"VariableDeclaration","scope":45614,"src":"7644:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45556,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":45561,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":45560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45558,"name":"choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45539,"src":"7655:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":45559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45546,"src":"7665:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7655:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7644:27:27"},{"eventCall":{"arguments":[{"id":45563,"name":"requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45532,"src":"7694:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45564,"name":"choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45539,"src":"7705:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":45565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45546,"src":"7713:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":45566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45525,"src":"7721:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":45562,"name":"Result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45048,"src":"7687:6:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,bool,uint256)"}},"id":45567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7687:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45568,"nodeType":"EmitStatement","src":"7682:46:27"},{"expression":{"id":45572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7739:33:27","subExpression":{"baseExpression":{"id":45569,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"7746:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45571,"indexExpression":{"id":45570,"name":"requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45532,"src":"7762:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7746:26:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45573,"nodeType":"ExpressionStatement","src":"7739:33:27"},{"expression":{"id":45577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7782:31:27","subExpression":{"baseExpression":{"id":45574,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"7789:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45576,"indexExpression":{"id":45575,"name":"sequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45492,"src":"7798:14:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7789:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45578,"nodeType":"ExpressionStatement","src":"7782:31:27"},{"expression":{"arguments":[{"expression":{"id":45580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7841:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":45581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7845:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7841:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45582,"name":"choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45539,"src":"7853:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":45583,"name":"win","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45557,"src":"7861:3:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":45579,"name":"recordStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45306,"src":"7824:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$","typeString":"function (address,bool,bool)"}},"id":45584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7824:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45585,"nodeType":"ExpressionStatement","src":"7824:41:27"},{"expression":{"arguments":[{"id":45587,"name":"requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45532,"src":"7894:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45525,"src":"7905:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":45589,"name":"win","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45557,"src":"7913:3:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":45586,"name":"increaseExperience","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45371,"src":"7875:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":45590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7875:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45591,"nodeType":"ExpressionStatement","src":"7875:42:27"},{"condition":{"id":45592,"name":"win","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45557,"src":"7932:3:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45613,"nodeType":"IfStatement","src":"7928:148:27","trueBody":{"id":45612,"nodeType":"Block","src":"7937:139:27","statements":[{"assignments":[45594,null],"declarations":[{"constant":false,"id":45594,"mutability":"mutable","name":"success","nameLocation":"7957:7:27","nodeType":"VariableDeclaration","scope":45612,"src":"7952:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45593,"name":"bool","nodeType":"ElementaryTypeName","src":"7952:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":45606,"initialValue":{"arguments":[{"hexValue":"","id":45604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8013:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":45597,"name":"requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45532,"src":"7978:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7970:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":45595,"name":"address","nodeType":"ElementaryTypeName","src":"7970:8:27","stateMutability":"payable","typeDescriptions":{}}},"id":45598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7970:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":45599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7989:4:27","memberName":"call","nodeType":"MemberAccess","src":"7970:23:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":45600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8001:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":45601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45525,"src":"8005:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8001:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7970:42:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7970:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7951:65:27"},{"expression":{"arguments":[{"id":45608,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45594,"src":"8038:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472616e73666572206661696c6564","id":45609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8047:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""},"value":"transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""}],"id":45607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8030:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8030:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45611,"nodeType":"ExpressionStatement","src":"8030:35:27"}]}}]},"documentation":{"id":45490,"nodeType":"StructuredDocumentation","src":"6760:229:27","text":" @dev Second txn in the flip process, throws if caller is not the account linked to ('sequenceNumber').\n This function completes the Entropy process, revealing the random number and settling the coin flip."},"functionSelector":"31eac793","implemented":true,"kind":"function","modifiers":[],"name":"flip","nameLocation":"7003:4:27","parameters":{"id":45495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45492,"mutability":"mutable","name":"sequenceNumber","nameLocation":"7015:14:27","nodeType":"VariableDeclaration","scope":45615,"src":"7008:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":45491,"name":"uint64","nodeType":"ElementaryTypeName","src":"7008:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":45494,"mutability":"mutable","name":"providerRandom","nameLocation":"7039:14:27","nodeType":"VariableDeclaration","scope":45615,"src":"7031:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7007:47:27"},"returnParameters":{"id":45496,"nodeType":"ParameterList","parameters":[],"src":"7064:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":45658,"nodeType":"FunctionDefinition","src":"8111:294:27","nodes":[],"body":{"id":45657,"nodeType":"Block","src":"8163:242:27","nodes":[],"statements":[{"assignments":[45623,null],"declarations":[{"constant":false,"id":45623,"mutability":"mutable","name":"success","nameLocation":"8179:7:27","nodeType":"VariableDeclaration","scope":45657,"src":"8174:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45622,"name":"bool","nodeType":"ElementaryTypeName","src":"8174:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":45639,"initialValue":{"arguments":[{"hexValue":"","id":45637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8264:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":45626,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45617,"src":"8200:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8192:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":45624,"name":"address","nodeType":"ElementaryTypeName","src":"8192:8:27","stateMutability":"payable","typeDescriptions":{}}},"id":45627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":45628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8206:4:27","memberName":"call","nodeType":"MemberAccess","src":"8192:18:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"components":[{"expression":{"baseExpression":{"id":45629,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"8219:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45633,"indexExpression":{"baseExpression":{"id":45630,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"8228:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45632,"indexExpression":{"id":45631,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45617,"src":"8244:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8228:21:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8219:31:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"id":45634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8251:10:27","memberName":"flipAmount","nodeType":"MemberAccess","referencedDeclaration":44986,"src":"8219:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":45635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8218:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8192:71:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8173:94:27"},{"expression":{"arguments":[{"id":45641,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45623,"src":"8285:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472616e73666572206661696c6564","id":45642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8294:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""},"value":"transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""}],"id":45640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8277:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8277:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45644,"nodeType":"ExpressionStatement","src":"8277:35:27"},{"expression":{"id":45650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8322:38:27","subExpression":{"baseExpression":{"id":45645,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45026,"src":"8329:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_FlipRequest_$44993_storage_$","typeString":"mapping(uint256 => struct FungibleFlip.FlipRequest storage ref)"}},"id":45649,"indexExpression":{"baseExpression":{"id":45646,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"8338:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45648,"indexExpression":{"id":45647,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45617,"src":"8354:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8338:21:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8329:31:27","typeDescriptions":{"typeIdentifier":"t_struct$_FlipRequest_$44993_storage","typeString":"struct FungibleFlip.FlipRequest storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45651,"nodeType":"ExpressionStatement","src":"8322:38:27"},{"expression":{"id":45655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8370:28:27","subExpression":{"baseExpression":{"id":45652,"name":"sequenceNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45021,"src":"8377:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":45654,"indexExpression":{"id":45653,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45617,"src":"8393:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8377:21:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45656,"nodeType":"ExpressionStatement","src":"8370:28:27"}]},"functionSelector":"cedc2911","implemented":true,"kind":"function","modifiers":[{"id":45620,"kind":"modifierInvocation","modifierName":{"id":45619,"name":"onlyOwner","nameLocations":["8153:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"8153:9:27"},"nodeType":"ModifierInvocation","src":"8153:9:27"}],"name":"manualReset","nameLocation":"8120:11:27","parameters":{"id":45618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45617,"mutability":"mutable","name":"user","nameLocation":"8140:4:27","nodeType":"VariableDeclaration","scope":45658,"src":"8132:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45616,"name":"address","nodeType":"ElementaryTypeName","src":"8132:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8131:14:27"},"returnParameters":{"id":45621,"nodeType":"ParameterList","parameters":[],"src":"8163:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45678,"nodeType":"FunctionDefinition","src":"8411:156:27","nodes":[],"body":{"id":45677,"nodeType":"Block","src":"8485:82:27","nodes":[],"statements":[{"expression":{"id":45671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45667,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44969,"src":"8495:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":45669,"name":"_entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45660,"src":"8514:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45668,"name":"IEntropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"8505:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntropy_$166_$","typeString":"type(contract IEntropy)"}},"id":45670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8505:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"src":"8495:28:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntropy_$166","typeString":"contract IEntropy"}},"id":45672,"nodeType":"ExpressionStatement","src":"8495:28:27"},{"expression":{"id":45675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45673,"name":"entropyProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45004,"src":"8533:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45674,"name":"_provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45662,"src":"8551:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8533:27:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":45676,"nodeType":"ExpressionStatement","src":"8533:27:27"}]},"functionSelector":"40ef7267","implemented":true,"kind":"function","modifiers":[{"id":45665,"kind":"modifierInvocation","modifierName":{"id":45664,"name":"onlyOwner","nameLocations":["8475:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"8475:9:27"},"nodeType":"ModifierInvocation","src":"8475:9:27"}],"name":"setEntropy","nameLocation":"8420:10:27","parameters":{"id":45663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45660,"mutability":"mutable","name":"_entropy","nameLocation":"8439:8:27","nodeType":"VariableDeclaration","scope":45678,"src":"8431:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45659,"name":"address","nodeType":"ElementaryTypeName","src":"8431:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45662,"mutability":"mutable","name":"_provider","nameLocation":"8457:9:27","nodeType":"VariableDeclaration","scope":45678,"src":"8449:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45661,"name":"address","nodeType":"ElementaryTypeName","src":"8449:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8430:37:27"},"returnParameters":{"id":45666,"nodeType":"ParameterList","parameters":[],"src":"8485:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45695,"nodeType":"FunctionDefinition","src":"8573:175:27","nodes":[],"body":{"id":45694,"nodeType":"Block","src":"8664:84:27","nodes":[],"statements":[{"expression":{"arguments":[{"id":45691,"name":"_pointsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45682,"src":"8725:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":45688,"name":"_blastPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45680,"src":"8687:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45687,"name":"IBlastPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46502,"src":"8674:12:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBlastPoints_$46502_$","typeString":"type(contract IBlastPoints)"}},"id":45689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBlastPoints_$46502","typeString":"contract IBlastPoints"}},"id":45690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8701:23:27","memberName":"configurePointsOperator","nodeType":"MemberAccess","referencedDeclaration":46501,"src":"8674:50:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":45692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45693,"nodeType":"ExpressionStatement","src":"8674:67:27"}]},"functionSelector":"e220831d","implemented":true,"kind":"function","modifiers":[{"id":45685,"kind":"modifierInvocation","modifierName":{"id":45684,"name":"onlyOwner","nameLocations":["8654:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"8654:9:27"},"nodeType":"ModifierInvocation","src":"8654:9:27"}],"name":"setPointsOperator","nameLocation":"8582:17:27","parameters":{"id":45683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45680,"mutability":"mutable","name":"_blastPoints","nameLocation":"8608:12:27","nodeType":"VariableDeclaration","scope":45695,"src":"8600:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45679,"name":"address","nodeType":"ElementaryTypeName","src":"8600:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45682,"mutability":"mutable","name":"_pointsOperator","nameLocation":"8630:15:27","nodeType":"VariableDeclaration","scope":45695,"src":"8622:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45681,"name":"address","nodeType":"ElementaryTypeName","src":"8622:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8599:47:27"},"returnParameters":{"id":45686,"nodeType":"ParameterList","parameters":[],"src":"8664:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45709,"nodeType":"FunctionDefinition","src":"8754:104:27","nodes":[],"body":{"id":45708,"nodeType":"Block","src":"8823:35:27","nodes":[],"statements":[{"expression":{"id":45706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45704,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44997,"src":"8833:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45705,"name":"_amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45699,"src":"8843:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"src":"8833:18:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage","typeString":"uint256[6] storage ref"}},"id":45707,"nodeType":"ExpressionStatement","src":"8833:18:27"}]},"functionSelector":"5382fc26","implemented":true,"kind":"function","modifiers":[{"id":45702,"kind":"modifierInvocation","modifierName":{"id":45701,"name":"onlyOwner","nameLocations":["8813:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"8813:9:27"},"nodeType":"ModifierInvocation","src":"8813:9:27"}],"name":"setFlipAmounts","nameLocation":"8763:14:27","parameters":{"id":45700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45699,"mutability":"mutable","name":"_amounts","nameLocation":"8796:8:27","nodeType":"VariableDeclaration","scope":45709,"src":"8778:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6]"},"typeName":{"baseType":{"id":45696,"name":"uint256","nodeType":"ElementaryTypeName","src":"8778:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45698,"length":{"hexValue":"36","id":45697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:27","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"8778:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6]"}},"visibility":"internal"}],"src":"8777:28:27"},"returnParameters":{"id":45703,"nodeType":"ParameterList","parameters":[],"src":"8823:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45721,"nodeType":"FunctionDefinition","src":"8864:98:27","nodes":[],"body":{"id":45720,"nodeType":"Block","src":"8923:39:27","nodes":[],"statements":[{"expression":{"id":45718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45716,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44999,"src":"8933:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45717,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45711,"src":"8945:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8933:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45719,"nodeType":"ExpressionStatement","src":"8933:22:27"}]},"functionSelector":"960bfe04","implemented":true,"kind":"function","modifiers":[{"id":45714,"kind":"modifierInvocation","modifierName":{"id":45713,"name":"onlyOwner","nameLocations":["8913:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"8913:9:27"},"nodeType":"ModifierInvocation","src":"8913:9:27"}],"name":"setThreshold","nameLocation":"8873:12:27","parameters":{"id":45712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45711,"mutability":"mutable","name":"_threshold","nameLocation":"8894:10:27","nodeType":"VariableDeclaration","scope":45721,"src":"8886:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8886:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8885:20:27"},"returnParameters":{"id":45715,"nodeType":"ParameterList","parameters":[],"src":"8923:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45746,"nodeType":"FunctionDefinition","src":"8968:172:27","nodes":[],"body":{"id":45745,"nodeType":"Block","src":"9013:127:27","nodes":[],"statements":[{"assignments":[45727,null],"declarations":[{"constant":false,"id":45727,"mutability":"mutable","name":"success","nameLocation":"9029:7:27","nodeType":"VariableDeclaration","scope":45745,"src":"9024:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45726,"name":"bool","nodeType":"ElementaryTypeName","src":"9024:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":45739,"initialValue":{"arguments":[{"hexValue":"","id":45737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9085:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":45728,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44833,"src":"9042:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":45729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9042:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":45730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9050:4:27","memberName":"call","nodeType":"MemberAccess","src":"9042:12:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":45733,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9070:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}],"id":45732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9062:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":45731,"name":"address","nodeType":"ElementaryTypeName","src":"9062:7:27","typeDescriptions":{}}},"id":45734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9062:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":45735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9076:7:27","memberName":"balance","nodeType":"MemberAccess","src":"9062:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9042:42:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9042:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9023:65:27"},{"expression":{"arguments":[{"id":45741,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45727,"src":"9106:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472616e73666572206661696c6564","id":45742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9115:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""},"value":"transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""}],"id":45740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9098:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":45743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45744,"nodeType":"ExpressionStatement","src":"9098:35:27"}]},"functionSelector":"3ccfd60b","implemented":true,"kind":"function","modifiers":[{"id":45724,"kind":"modifierInvocation","modifierName":{"id":45723,"name":"onlyOwner","nameLocations":["9003:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"9003:9:27"},"nodeType":"ModifierInvocation","src":"9003:9:27"}],"name":"withdraw","nameLocation":"8977:8:27","parameters":{"id":45722,"nodeType":"ParameterList","parameters":[],"src":"8985:2:27"},"returnParameters":{"id":45725,"nodeType":"ParameterList","parameters":[],"src":"9013:0:27"},"scope":45768,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":45763,"nodeType":"FunctionDefinition","src":"9146:95:27","nodes":[],"body":{"id":45762,"nodeType":"Block","src":"9183:58:27","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":45756,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9219:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FungibleFlip_$45768","typeString":"contract FungibleFlip"}],"id":45755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9211:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":45754,"name":"address","nodeType":"ElementaryTypeName","src":"9211:7:27","typeDescriptions":{}}},"id":45757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9211:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":45758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44833,"src":"9226:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":45759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9226:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":45751,"name":"blast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44966,"src":"9193:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IBlast_$46494","typeString":"contract IBlast"}},"id":45753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9199:11:27","memberName":"claimMaxGas","nodeType":"MemberAccess","referencedDeclaration":46493,"src":"9193:17:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) external returns (uint256)"}},"id":45760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45761,"nodeType":"ExpressionStatement","src":"9193:41:27"}]},"functionSelector":"a95d6b1c","implemented":true,"kind":"function","modifiers":[{"id":45749,"kind":"modifierInvocation","modifierName":{"id":45748,"name":"onlyOwner","nameLocations":["9173:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":44824,"src":"9173:9:27"},"nodeType":"ModifierInvocation","src":"9173:9:27"}],"name":"claimGas","nameLocation":"9155:8:27","parameters":{"id":45747,"nodeType":"ParameterList","parameters":[],"src":"9163:2:27"},"returnParameters":{"id":45750,"nodeType":"ParameterList","parameters":[],"src":"9183:0:27"},"scope":45768,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":45767,"nodeType":"FunctionDefinition","src":"9247:29:27","nodes":[],"body":{"id":45766,"nodeType":"Block","src":"9274:2:27","nodes":[],"statements":[]},"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":45764,"nodeType":"ParameterList","parameters":[],"src":"9254:2:27"},"returnParameters":{"id":45765,"nodeType":"ParameterList","parameters":[],"src":"9274:0:27"},"scope":45768,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":44962,"name":"Ownable","nameLocations":["1212:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":44913,"src":"1212:7:27"},"id":44963,"nodeType":"InheritanceSpecifier","src":"1212:7:27"}],"canonicalName":"FungibleFlip","contractDependencies":[],"contractKind":"contract","documentation":{"id":44961,"nodeType":"StructuredDocumentation","src":"207:979:27","text":"  _______  __    __  .__   __.   _______  __  .______    __       _______     _______  __       __  .______\n |   ____||  |  |  | |  \\ |  |  /  _____||  | |   _  \\  |  |     |   ____|   |   ____||  |     |  | |   _  \\\n |  |__   |  |  |  | |   \\|  | |  |  __  |  | |  |_)  | |  |     |  |__      |  |__   |  |     |  | |  |_)  |\n |   __|  |  |  |  | |  . `  | |  | |_ | |  | |   _  <  |  |     |   __|     |   __|  |  |     |  | |   ___/\n |  |     |  `--'  | |  |\\   | |  |__| | |  | |  |_)  | |  `----.|  |____    |  |     |  `----.|  | |  |\n |__|      \\______/  |__| \\__|  \\______| |__| |______/  |_______||_______|   |__|     |_______||__| | _|\n @dev Coin flip game, built on Blast, where you double up or get rugged. Powered by Pyth Entropy,\n our protocol is fast and efficient, and we take no house rake or fee, providing true 50/50 odds.\n Website: https://fungibleflip.io\n Twitter: https://twitter.com/FungibleFlip\n @author corbo.eth"},"fullyImplemented":true,"linearizedBaseContracts":[45768,44913,44935],"name":"FungibleFlip","nameLocation":"1196:12:27","scope":45769,"usedErrors":[44779,44784],"usedEvents":[44790,45032,45038,45048]}],"license":"MIT"},"id":27}